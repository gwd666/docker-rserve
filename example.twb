<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook locale='en_US' source-build='9.3.0 (9300.16.0315.0125)' source-platform='mac' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.3'>
      <aliases enabled='yes' />
      <column caption='component' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
        <calculation class='tableau' formula='3' />
        <range min='1' />
      </column>
      <column caption='hopach distance function' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;cosangle&quot;'>
        <calculation class='tableau' formula='&quot;cosangle&quot;' />
        <members>
          <member value='&quot;cosangle&quot;' />
          <member value='&quot;abscosangle&quot;' />
          <member value='&quot;euclid&quot;' />
          <member value='&quot;cor&quot;' />
          <member value='&quot;abscor&quot;' />
        </members>
      </column>
      <column caption='color by' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Petal.Width&quot;'>
        <calculation class='tableau' formula='&quot;Petal.Width&quot;' />
        <members>
          <member value='&quot;Petal.Length&quot;' />
          <member value='&quot;Petal.Width&quot;' />
        </members>
      </column>
      <column caption='locache entry' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;lat&quot;'>
        <calculation class='tableau' formula='&quot;lat&quot;' />
        <members>
          <member value='&quot;timeZoneId&quot;' />
          <member value='&quot;utcOffset&quot;' />
          <member value='&quot;city&quot;' />
          <member value='&quot;country&quot;' />
          <member value='&quot;lat&quot;' />
          <member value='&quot;formattedAddress&quot;' />
          <member value='&quot;dstOffset&quot;' />
          <member value='&quot;timeUntilTomorrow&quot;' />
          <member value='&quot;utcFromTimestamp&quot;' />
          <member value='&quot;timeZoneName&quot;' />
          <member value='&quot;s&quot;' />
          <member value='&quot;rawOffset&quot;' />
          <member value='&quot;lng&quot;' />
        </members>
      </column>
      <column caption='mysql table' datatype='string' name='[Parameter 5]' param-domain-type='any' role='measure' type='nominal' value='&quot;hopach_results&quot;'>
        <calculation class='tableau' formula='&quot;hopach_results&quot;' />
      </column>
      <column caption='overwrite table?' datatype='boolean' name='[Parameter 6]' param-domain-type='list' role='measure' type='nominal' value='false'>
        <calculation class='tableau' formula='false' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='append data to table?' datatype='boolean' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='false'>
        <calculation class='tableau' formula='false' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='run script?' datatype='boolean' name='[Parameter 8]' param-domain-type='list' role='measure' type='nominal' value='false'>
        <calculation class='tableau' formula='false' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='alpha' datatype='real' name='[Parameter 9]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
        <range max='1.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='tableau (restaurant)' inline='true' name='mysql.11dbwcn1vr1ye315u9q3g19seb77' version='9.3'>
      <connection class='mysql' dbname='tableau' odbc-native-protocol='yes' port='3306' server='192.168.99.100' source-charset='' username='root'>
        <relation name='tmp' table='[tmp]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>row_names</remote-name>
            <remote-type>130</remote-type>
            <local-name>[row_names]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>row_names</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>53</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeZoneName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeZoneName]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>timeZoneName</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>utcFromTimestamp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[utcFromTimestamp]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>utcFromTimestamp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawOffset</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rawOffset]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>rawOffset</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>lng</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>53</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>formattedAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[formattedAddress]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>formattedAddress</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeZoneId</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timeZoneId]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>timeZoneId</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dstOffset</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dstOffset]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>dstOffset</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeUntilTomorrow</remote-name>
            <remote-type>20</remote-type>
            <local-name>[timeUntilTomorrow]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>timeUntilTomorrow</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>utcOffset</remote-name>
            <remote-type>20</remote-type>
            <local-name>[utcOffset]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>utcOffset</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>s</remote-name>
            <remote-type>130</remote-type>
            <local-name>[s]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>s</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[tmp]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Dst Offset' datatype='integer' name='[dstOffset]' role='measure' type='quantitative' />
      <column caption='Formatted Address' datatype='string' name='[formattedAddress]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lng' datatype='real' name='[lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Raw Offset' datatype='integer' name='[rawOffset]' role='measure' type='quantitative' />
      <column caption='Row Names' datatype='string' name='[row_names]' role='dimension' type='nominal' />
      <column caption='S' datatype='string' name='[s]' role='dimension' type='nominal' />
      <column caption='Time Until Tomorrow' datatype='integer' name='[timeUntilTomorrow]' role='measure' type='quantitative' />
      <column caption='Time Zone Id' datatype='string' name='[timeZoneId]' role='dimension' type='nominal' />
      <column caption='Time Zone Name' datatype='string' name='[timeZoneName]' role='dimension' type='nominal' />
      <column caption='Utc From Timestamp' datatype='string' name='[utcFromTimestamp]' role='dimension' type='nominal' />
      <column caption='Utc Offset' datatype='integer' name='[utcOffset]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='country, city'>
          <field>[country]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.35481' measure-ordering='alphabetic' measure-percentage='0.338041' parameter-percentage='0.307149' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='restaurants' inline='true' name='textscan.1kt900h04bxgy615sxtd017dr75v' version='9.3'>
      <connection class='textscan' directory='/Users/user/repos/docker-rserve' filename='restaurants.csv' password='' server='' username=''>
        <relation name='restaurants#csv' table='[restaurants#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&quot;' text-qualifier=''>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='restaurant' ordinal='1' />
            <column datatype='string' name=':' ordinal='2' />
            <column datatype='string' name='address' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[restaurants#csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <hidden>true</hidden>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restaurant</remote-name>
            <remote-type>129</remote-type>
            <local-name>[restaurant]</local-name>
            <parent-name>[restaurants#csv]</parent-name>
            <remote-alias>restaurant</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>:</remote-name>
            <remote-type>129</remote-type>
            <local-name>[:]</local-name>
            <parent-name>[restaurants#csv]</parent-name>
            <remote-alias>:</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[restaurants#csv]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[restaurants#csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <hidden>true</hidden>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[restaurants#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\&quot;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='quote-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='&quot;Restaurant&quot;:&quot;Address&quot;' datatype='string' hidden='true' name='[&quot;restaurant&quot;:&quot;address&quot;]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[:]' role='dimension' type='nominal' />
      <column caption='locache results' datatype='string' name='[Calculation_1152077082853969922]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SCRIPT_STR(&apos;&#10;library(httr)&#10;library(magrittr)&#10;&#10;getLocacheAndConcat &lt;- function(location) {&#10;  # UTC time from 21-04-2016 19:30:00:&#10;  timestamp &lt;-&#10;    strptime(&quot;2016-04-21 19:30:00&quot;, &quot;%Y-%m-%d %H:%M:%S&quot;, tz=&quot;Europe/Berlin&quot;) %&gt;%&#10;    as.POSIXct %&gt;%&#10;    unclass&#10;  &#10;  # example return:&#10;  #   {&#10;  #   &quot;timeZoneId&quot;: &quot;Europe/Berlin&quot;,&#10;  #   &quot;utcOffset&quot;: 3600,&#10;  #   &quot;city&quot;: &quot;Berlin&quot;,&#10;  #   &quot;country&quot;: &quot;Germany&quot;,&#10;  #   &quot;lat&quot;: 52.5466863,&#10;  #   &quot;formattedAddress&quot;: &quot;Am Falkpl. 5, 10437 Berlin, Germany&quot;,&#10;  #   &quot;dstOffset&quot;: 0,&#10;  #   &quot;timeUntilTomorrow&quot;: 21300,&#10;  #   &quot;utcFromTimestamp&quot;: &quot;1970-01-01 00:20:34 UTC&quot;,&#10;  #   &quot;timeZoneName&quot;: &quot;Central European Standard Time&quot;,&#10;  #   &quot;s&quot;: &quot;Berlin&quot;,&#10;  #   &quot;rawOffset&quot;: 3600,&#10;  #   &quot;lng&quot;: 13.4058228&#10;  #   }&#10;  httr::GET(url = &quot;http://locache.herokuapp.com&quot;,&#10;            query=list(location=location, timestamp=timestamp)) %&gt;%&#10;    content %&gt;%&#10;    unlist %&gt;%&#10;    paste(collapse = &quot;;&quot;)&#10;}&#10;&#10;getLocacheAndConcat(.arg1)&#10;&apos;, ATTR([address]))'>
          <table-calc level-break='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' ordering-type='Field'>
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[restaurant]' />
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' />
          </table-calc>
        </calculation>
      </column>
      <column datatype='string' hidden='true' name='[F1]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F5]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='debug2' datatype='boolean' name='[debug (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SCRIPT_BOOL(&apos;&#10;require(magrittr) &amp;&amp; require(DBI)&#10;keyCol &lt;- .arg1&#10;&apos;, ATTR([restaurant]))'>
          <table-calc level-break='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' ordering-type='Field'>
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[restaurant]' />
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='locache lat' datatype='string' name='[locache lng (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SCRIPT_STR(&apos;&#10;library(httr)&#10;library(magrittr)&#10;&#10;getLocacheItem &lt;- function(location, entryName) {&#10;  # UTC time from 21-04-2016 19:30:00:&#10;  timestamp &lt;-&#10;    strptime(&quot;2016-04-21 19:30:00&quot;, &quot;%Y-%m-%d %H:%M:%S&quot;, tz=&quot;Europe/Berlin&quot;) %&gt;%&#10;    as.POSIXct %&gt;%&#10;    unclass&#10;  &#10;  # example return:&#10;  #   {&#10;  #   &quot;timeZoneId&quot;: &quot;Europe/Berlin&quot;,&#10;  #   &quot;utcOffset&quot;: 3600,&#10;  #   &quot;city&quot;: &quot;Berlin&quot;,&#10;  #   &quot;country&quot;: &quot;Germany&quot;,&#10;  #   &quot;lat&quot;: 52.5466863,&#10;  #   &quot;formattedAddress&quot;: &quot;Am Falkpl. 5, 10437 Berlin, Germany&quot;,&#10;  #   &quot;dstOffset&quot;: 0,&#10;  #   &quot;timeUntilTomorrow&quot;: 21300,&#10;  #   &quot;utcFromTimestamp&quot;: &quot;1970-01-01 00:20:34 UTC&quot;,&#10;  #   &quot;timeZoneName&quot;: &quot;Central European Standard Time&quot;,&#10;  #   &quot;s&quot;: &quot;Berlin&quot;,&#10;  #   &quot;rawOffset&quot;: 3600,&#10;  #   &quot;lng&quot;: 13.4058228&#10;  #   }&#10;  httr::GET(url = &quot;http://locache.herokuapp.com&quot;,&#10;            query=list(location=location, timestamp=timestamp)) %&gt;%&#10;    content %&gt;% `[[`(entryName) %&gt;% as.character&#10;}&#10;&#10;getLocacheItem(.arg1, &quot;lat&quot;)&#10;&apos;, ATTR([address]))'>
          <table-calc level-break='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' ordering-type='Field'>
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[restaurant]' />
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='locache lat -- bad!' datatype='string' name='[locache results (copy 2)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='// cannot calculate futher than table calculation! =(&#13;&#10;SPLIT([Calculation_1152077082853969922], &apos;;&apos;, 4)'>
          <table-calc level-break='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' ordering-type='Field'>
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[restaurant]' />
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='specific locache entry' datatype='string' name='[locache results (copy 3)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SCRIPT_STR(&apos;&#10;library(httr)&#10;library(magrittr)&#10;&#10;getLocacheItem &lt;- function(location, entryName) {&#10;  # UTC time from 21-04-2016 19:30:00:&#10;  timestamp &lt;-&#10;    strptime(&quot;2016-04-21 19:30:00&quot;, &quot;%Y-%m-%d %H:%M:%S&quot;, tz=&quot;Europe/Berlin&quot;) %&gt;%&#10;    as.POSIXct %&gt;%&#10;    unclass&#10;  &#10;  # example return:&#10;  #   {&#10;  #   &quot;timeZoneId&quot;: &quot;Europe/Berlin&quot;,&#10;  #   &quot;utcOffset&quot;: 3600,&#10;  #   &quot;city&quot;: &quot;Berlin&quot;,&#10;  #   &quot;country&quot;: &quot;Germany&quot;,&#10;  #   &quot;lat&quot;: 52.5466863,&#10;  #   &quot;formattedAddress&quot;: &quot;Am Falkpl. 5, 10437 Berlin, Germany&quot;,&#10;  #   &quot;dstOffset&quot;: 0,&#10;  #   &quot;timeUntilTomorrow&quot;: 21300,&#10;  #   &quot;utcFromTimestamp&quot;: &quot;1970-01-01 00:20:34 UTC&quot;,&#10;  #   &quot;timeZoneName&quot;: &quot;Central European Standard Time&quot;,&#10;  #   &quot;s&quot;: &quot;Berlin&quot;,&#10;  #   &quot;rawOffset&quot;: 3600,&#10;  #   &quot;lng&quot;: 13.4058228&#10;  #   }&#10;  httr::GET(url = &quot;http://locache.herokuapp.com&quot;,&#10;            query=list(location=location, timestamp=timestamp)) %&gt;%&#10;    content %&gt;% `[[`(entryName) %&gt;% as.character&#10;}&#10;&#10;getLocacheItem(.arg1, .arg2)&#10;&apos;, ATTR([address]), [Parameters].[Parameter 4])'>
          <table-calc level-break='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' ordering-type='Field'>
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[restaurant]' />
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='write locache results to mysql table' datatype='string' name='[locache results (copy 4)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SCRIPT_STR(&apos;&#10;# requires magrittr, data.table, httr&#10;getLocacheInfo &lt;- function(locations) {&#10;  # UTC time from 21-04-2016 19:30:00:&#10;  timestamp &lt;-&#10;    strptime(&quot;2016-04-21 19:30:00&quot;,&#10;             &quot;%Y-%m-%d %H:%M:%S&quot;,&#10;             tz=&quot;Europe/Berlin&quot;) %&gt;%&#10;    as.POSIXct %&gt;%&#10;    unclass&#10;&#10;  # example return:&#10;  #   {&#10;  #   &quot;timeZoneId&quot;: &quot;Europe/Berlin&quot;, &quot;utcOffset&quot;: 3600, &quot;city&quot;: &quot;Berlin&quot;,&#10;  #   &quot;country&quot;: &quot;Germany&quot;, &quot;lat&quot;: 52.5466863,&#10;  #   &quot;formattedAddress&quot;: &quot;Am Falkpl. 5, 10437 Berlin, Germany&quot;,&#10;  #   &quot;dstOffset&quot;: 0, &quot;timeUntilTomorrow&quot;: 21300,&#10;  #   &quot;utcFromTimestamp&quot;: &quot;1970-01-01 00:20:34 UTC&quot;,&#10;  #   &quot;timeZoneName&quot;: &quot;Central European Standard Time&quot;,&#10;  #   &quot;s&quot;: &quot;Berlin&quot;, &quot;rawOffset&quot;: 3600, &quot;lng&quot;: 13.4058228&#10;  #   }&#10;  lapply(locations,&#10;         function(location) {&#10;           httr::GET(url = &quot;http://locache.herokuapp.com&quot;,&#10;                     query = list(location=location, timestamp=timestamp)) %&gt;%&#10;                       httr::content() %&gt;%&#10;                       as.data.table&#10;         }) %&gt;%&#10;           rbindlist %&gt;%&#10;           set(j = &quot;address&quot;, value = locations) %&gt;%&#10;           return&#10;}&#10;&#10;tableName &lt;- .arg2&#10;overwriteData &lt;- .arg3&#10;appendData &lt;- .arg4&#10;tableData &lt;- getLocacheInfo(.arg1)&#10;if (overwriteData) {&#10;tryCatch(dbRemoveTable(dbConn, tableName))&#10;}&#10;&#10;dbConn %&gt;%&#10;dbWriteTable(&#10; name = tableName,&#10; value = tableData,&#10; overwrite = overwriteData,&#10; append = appendData,&#10; temporary=TRUE&#10;)&#10;Sys.time()&#10;&apos;,&#10; ATTR([address]),&#10; [Parameters].[Parameter 5],&#10; [Parameters].[Parameter 6],&#10; [Parameters].[Parameter 7])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='debug' datatype='string' name='[locache results (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SCRIPT_STR(&apos;&#10;paste0(capture.output(str(.arg1)), collapse=&quot;\n&quot;)&#10;&apos;, ATTR([address]))'>
          <table-calc level-break='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' ordering-type='Field'>
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[restaurant]' />
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Restaurant' datatype='string' name='[restaurant]' role='dimension' type='nominal' />
      <column caption='locache lng' datatype='string' name='[specific locache entry (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SCRIPT_STR(&apos;&#10;library(httr)&#10;library(magrittr)&#10;&#10;getLocacheItem &lt;- function(location, entryName) {&#10;  # UTC time from 21-04-2016 19:30:00:&#10;  timestamp &lt;-&#10;    strptime(&quot;2016-04-21 19:30:00&quot;, &quot;%Y-%m-%d %H:%M:%S&quot;, tz=&quot;Europe/Berlin&quot;) %&gt;%&#10;    as.POSIXct %&gt;%&#10;    unclass&#10;  &#10;  # example return:&#10;  #   {&#10;  #   &quot;timeZoneId&quot;: &quot;Europe/Berlin&quot;,&#10;  #   &quot;utcOffset&quot;: 3600,&#10;  #   &quot;city&quot;: &quot;Berlin&quot;,&#10;  #   &quot;country&quot;: &quot;Germany&quot;,&#10;  #   &quot;lat&quot;: 52.5466863,&#10;  #   &quot;formattedAddress&quot;: &quot;Am Falkpl. 5, 10437 Berlin, Germany&quot;,&#10;  #   &quot;dstOffset&quot;: 0,&#10;  #   &quot;timeUntilTomorrow&quot;: 21300,&#10;  #   &quot;utcFromTimestamp&quot;: &quot;1970-01-01 00:20:34 UTC&quot;,&#10;  #   &quot;timeZoneName&quot;: &quot;Central European Standard Time&quot;,&#10;  #   &quot;s&quot;: &quot;Berlin&quot;,&#10;  #   &quot;rawOffset&quot;: 3600,&#10;  #   &quot;lng&quot;: 13.4058228&#10;  #   }&#10;  httr::GET(url = &quot;http://locache.herokuapp.com&quot;,&#10;            query=list(location=location, timestamp=timestamp)) %&gt;%&#10;    content %&gt;% `[[`(entryName) %&gt;% as.character&#10;}&#10;&#10;getLocacheItem(.arg1, &quot;lng&quot;)&#10;&apos;, ATTR([address]))'>
          <table-calc level-break='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' ordering-type='Field'>
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[restaurant]' />
            <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' />
          </table-calc>
        </calculation>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/user/repos/docker-rserve/restaurants_extract.tde' schema='Extract' tablename='Extract' update-time='04/11/2016 07:27:04 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='7' timestamp-start='2016-04-11 19:27:04.362' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>7</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[address]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>address</remote-alias>
              <ordinal>1</ordinal>
              <family>restaurants#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Am Falkplatz 5&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Schönhauser Allee 50, 10437&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>7</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Oberbaumstraße 8, 10997&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>restaurant</remote-name>
              <remote-type>129</remote-type>
              <local-name>[restaurant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>restaurant</remote-alias>
              <ordinal>2</ordinal>
              <family>restaurants#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;BBI&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tommi&apos;s Burger Joint&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>7</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.274667' measure-ordering='alphabetic' measure-percentage='0.386667' parameter-percentage='0.338667' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='locache entry' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;lat&quot;'>
          <calculation class='tableau' formula='&quot;lat&quot;' />
        </column>
        <column caption='mysql table' datatype='string' name='[Parameter 5]' param-domain-type='any' role='measure' type='nominal' value='&quot;hopach_results&quot;'>
          <calculation class='tableau' formula='&quot;hopach_results&quot;' />
        </column>
        <column caption='overwrite table?' datatype='boolean' name='[Parameter 6]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
        </column>
        <column caption='append data to table?' datatype='boolean' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='hopach_results (tableau)' inline='true' name='mysql.0xq6zeu13oiji61emninr1ymskos' version='9.3'>
      <connection class='mysql' dbname='tableau' odbc-native-protocol='yes' port='3306' server='192.168.99.100' source-charset='' username='root'>
        <relation name='hopach_results' table='[hopach_results]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>obs_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[obs_id]</local-name>
            <parent-name>[hopach_results]</parent-name>
            <remote-alias>obs_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>53</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cluster_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cluster_id]</local-name>
            <parent-name>[hopach_results]</parent-name>
            <remote-alias>cluster_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dist_fun</remote-name>
            <remote-type>130</remote-type>
            <local-name>[dist_fun]</local-name>
            <parent-name>[hopach_results]</parent-name>
            <remote-alias>dist_fun</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cluster Id' datatype='integer' name='[cluster_id]' role='dimension' type='ordinal' />
      <column caption='Dist Fun' datatype='string' name='[dist_fun]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Obs Id' datatype='integer' datatype-customized='true' name='[obs_id]' role='dimension' type='ordinal' />
      <group caption='Action (Cluster Id,Dist Fun,Obs Id)' hidden='true' name='[Action (Cluster Id,Dist Fun,Obs Id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[cluster_id]' />
          <groupfilter function='level-members' level='[dist_fun]' />
          <groupfilter function='level-members' level='[obs_id]' />
        </groupfilter>
      </group>
      <group caption='Action (Obs Id)' hidden='true' name='[Action (Obs Id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[obs_id]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.318623' measure-ordering='alphabetic' measure-percentage='0.285084' parameter-percentage='0.396293' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='iris_data' inline='true' name='textscan.1liry6e1vjbszh12mzcn81bghamr' version='9.3'>
      <connection class='textscan' directory='/Users/user/repos/docker-rserve' filename='restaurants.csv' password='' server='' username=''>
        <relation name='iris#csv' table='[iris#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='Sepal.Length' ordinal='1' />
            <column datatype='real' name='Sepal.Width' ordinal='2' />
            <column datatype='real' name='Petal.Length' ordinal='3' />
            <column datatype='real' name='Petal.Width' ordinal='4' />
            <column datatype='string' name='Species' ordinal='5' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[iris#csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sepal.Length</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sepal.Length]</local-name>
            <parent-name>[iris#csv]</parent-name>
            <remote-alias>Sepal.Length</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sepal.Width</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sepal.Width]</local-name>
            <parent-name>[iris#csv]</parent-name>
            <remote-alias>Sepal.Width</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Petal.Length</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Petal.Length]</local-name>
            <parent-name>[iris#csv]</parent-name>
            <remote-alias>Petal.Length</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Petal.Width</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Petal.Width]</local-name>
            <parent-name>[iris#csv]</parent-name>
            <remote-alias>Petal.Width</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Species</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Species]</local-name>
            <parent-name>[iris#csv]</parent-name>
            <remote-alias>Species</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[iris#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='locache results' datatype='string' name='[Calculation_1152077082850844672]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SCRIPT_STR(&apos;&#10;library(magrittr)&#10;&#10;getLocacheAndConcat &lt;- function(location) {&#10;  # UTC time from 21-04-2016 19:30:00:&#10;  timestamp &lt;-&#10;    strptime(&quot;2016-04-21 19:30:00&quot;, &quot;%Y-%m-%d %H:%M:%S&quot;, tz=&quot;Europe/Berlin&quot;) %&gt;%&#10;    as.POSIXct %&gt;%&#10;    unclass&#10;  &#10;  # example return:&#10;  #   {&#10;  #   &quot;timeZoneId&quot;: &quot;Europe/Berlin&quot;,&#10;  #   &quot;utcOffset&quot;: 3600,&#10;  #   &quot;city&quot;: &quot;Berlin&quot;,&#10;  #   &quot;country&quot;: &quot;Germany&quot;,&#10;  #   &quot;lat&quot;: 52.5466863,&#10;  #   &quot;formattedAddress&quot;: &quot;Am Falkpl. 5, 10437 Berlin, Germany&quot;,&#10;  #   &quot;dstOffset&quot;: 0,&#10;  #   &quot;timeUntilTomorrow&quot;: 21300,&#10;  #   &quot;utcFromTimestamp&quot;: &quot;1970-01-01 00:20:34 UTC&quot;,&#10;  #   &quot;timeZoneName&quot;: &quot;Central European Standard Time&quot;,&#10;  #   &quot;s&quot;: &quot;Berlin&quot;,&#10;  #   &quot;rawOffset&quot;: 3600,&#10;  #   &quot;lng&quot;: 13.4058228&#10;  #   }&#10;  httr::GET(url = &quot;http://locache.herokuapp.com&quot;,&#10;            query=list(location=location, timestamp=timestamp)) %&gt;%&#10;    content %&gt;%&#10;    unlist %&gt;%&#10;    paste(collapse = &quot;;&quot;)&#10;}&#10;&#10;address &lt;- .arg1&#10;address %&gt;% sapply(getLocacheAndConcat)&#10;&apos;,&#10;MAX([textscan.1kt900h04bxgy615sxtd017dr75v].[address]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='normalized petal length' datatype='real' name='[Calculation_189151187457298433]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&apos;&#13;&#10;petal_length &lt;- .arg1&#13;&#10;(petal_length - mean(petal_length))/sd(petal_length)&#13;&#10;&apos;, SUM([Petal.Length]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='hopach clustering' datatype='integer' name='[Calculation_213358033591664641]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='SCRIPT_INT(&quot;&#13;&#10;sepal_length &lt;- .arg1&#13;&#10;sepal_width &lt;- .arg2&#13;&#10;petal_length &lt;- .arg3&#13;&#10;petal_width &lt;- .arg4&#13;&#10;&#13;&#10;# if we had mixed data types, we&apos;d have to write our own distance&#13;&#10;# function, in which case, we&apos;d want to use hopach::distancematrix&#13;&#10;#&#13;&#10;# But, instead, we have all numeric data, so we can call hopach::hopach&#13;&#10;# directly, with various prebuilt distance functions (e.g., &apos;cosangle&apos;,&#13;&#10;# &apos;abscosangle&apos;, &apos;euclid&apos;, &apos;abseuclid&apos;, &apos;cor&apos;, &apos;abscor&apos;)&#13;&#10;dist_function &lt;- .arg5&#13;&#10;&#13;&#10;&#13;&#10;input_matrix &lt;-&#13;&#10;  data.frame(sepal_length, sepal_width, petal_length, petal_width)&#13;&#10;results &lt;- hopach::hopach(input_matrix, d = dist_function)&#13;&#10;results$clustering$labels&#13;&#10;&quot;,&#13;&#10;SUM([Sepal.Length]), SUM([Sepal.Width]), SUM([Petal.Length]), SUM([Petal.Width]),&#13;&#10;[Parameters].[Parameter 2])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='colorization' datatype='real' name='[Calculation_213358033612091403]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &apos;Petal.Length&apos; THEN [Petal.Length]&#13;&#10;WHEN &apos;Petal.Width&apos; THEN [Petal.Width]&#13;&#10;END' />
      </column>
      <column aggregation='Sum' caption='observation id' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Species]' role='dimension' type='nominal' />
      <column caption='debug' datatype='string' name='[hopach clustering (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SCRIPT_STR(&quot;&#13;&#10;paste0(capture.output(table(.arg1)), collapse=&apos;\n&apos;)&#13;&#10;&quot;, MAX([Species]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='write hopach results to mysql table' datatype='string' name='[locache results (copy 4)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SCRIPT_STR(&apos;&#10;&#10;if (!.arg8) {&#10;&quot;[run script?] needs to be true for script to run...&quot;&#10;} else {&#10;&#10;# algorithm data&#10;sepal_length &lt;- .arg1&#10;sepal_width &lt;- .arg2&#10;petal_length &lt;- .arg3&#10;petal_width &lt;- .arg4&#10;&#10;# run all hopach variants&#10;dist_functions &lt;- c(&quot;cosangle&quot;,&quot;abscosangle&quot;, &quot;euclid&quot;, &quot;cor&quot;, &quot;abscor&quot;)&#10;input_matrix &lt;-&#10;  data.frame(sepal_length, sepal_width, petal_length, petal_width)&#10;&#10;tableData &lt;-&#10;lapply(dist_functions, &#10;      function(dist_function) {&#10;        results &lt;- hopach::hopach(input_matrix, d = dist_function)&#10;        data.table(obs_id = .arg5,&#10;                   cluster_id = results$clustering$labels) %&gt;%&#10;        set(j = &quot;dist_fun&quot;, value = dist_function)&#10;       }) %&gt;%&#10;rbindlist&#10;&#10;# table info&#10;tableName &lt;- .arg6&#10;overwriteData &lt;- .arg7&#10;&#10;dbConn %&gt;%&#10;dbWriteTable(&#10; name = tableName,&#10; value = tableData,&#10; overwrite = overwriteData,&#10; temporary = TRUE,&#10; row.names = FALSE&#10;)&#10;Sys.time() %&gt;% strftime&#10;}&#10;&apos;,&#10;SUM([Sepal.Length]), SUM([Sepal.Width]), SUM([Petal.Length]), SUM([Petal.Width]), SUM([F1]),&#10; [Parameters].[Parameter 5],&#10; [Parameters].[Parameter 6],&#10;[Parameters].[Parameter 8])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='normalized petal width' datatype='real' name='[normalized petal length (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&apos;&#13;&#10;petal_length &lt;- .arg1&#13;&#10;(petal_length - mean(petal_length))/sd(petal_length)&#13;&#10;&apos;, SUM([Petal.Width]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column-instance column='[Species]' derivation='CountD' name='[ctd:Species:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
      <group caption='Action (F1)' hidden='true' name='[Action (F1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[F1]' />
        </groupfilter>
      </group>
      <group caption='Action (Species (group),Species)' hidden='true' name='[Action (Species (group),Species)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Species (group)]' />
          <groupfilter function='level-members' level='[Species]' />
        </groupfilter>
      </group>
      <group caption='Action (Species)' hidden='true' name='[Action (Species)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Species]' />
        </groupfilter>
      </group>
      <group caption='Action (observation id)' hidden='true' name='[Action (observation id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[F1]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/user/repos/docker-rserve/iris_extract.tde' schema='Extract' tablename='Extract' update-time='04/12/2016 01:21:32 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='150' timestamp-start='2016-04-12 13:21:32.983' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>iris#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>150</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11325.0</statistic>
                <statistic aggregation='Avg' datatype='real'>75.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>150</statistic>
                <statistic aggregation='Stdev' datatype='real'>43.445367992456916</statistic>
                <statistic aggregation='StdevP' datatype='real'>43.300307928081374</statistic>
                <statistic aggregation='Var' datatype='real'>1887.5</statistic>
                <statistic aggregation='VarP' datatype='real'>1874.9166666666667</statistic>
                <statistic aggregation='Count' datatype='integer'>150</statistic>
                <statistic aggregation='Median' datatype='integer'>76</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1136275.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>150.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>150</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>150.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Petal.Length</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Petal.Length]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Petal.Length</remote-alias>
              <ordinal>2</ordinal>
              <family>iris#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>563.70000000000039</statistic>
                <statistic aggregation='Avg' datatype='real'>3.7580000000000027</statistic>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>6.9000000000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.7652982332594618</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.7594040657752985</statistic>
                <statistic aggregation='Var' datatype='real'>3.1162778523489774</statistic>
                <statistic aggregation='VarP' datatype='real'>3.095502666666651</statistic>
                <statistic aggregation='Count' datatype='integer'>150</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2582.7100000000005</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Petal.Width</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Petal.Width]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Petal.Width</remote-alias>
              <ordinal>3</ordinal>
              <family>iris#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>179.90000000000012</statistic>
                <statistic aggregation='Avg' datatype='real'>1.199333333333334</statistic>
                <statistic aggregation='Min' datatype='real'>0.10000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>2.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.76223766896034573</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.75969262790215863</statistic>
                <statistic aggregation='Var' datatype='real'>0.58100626398210165</statistic>
                <statistic aggregation='VarP' datatype='real'>0.5771328888888877</statistic>
                <statistic aggregation='Count' datatype='integer'>150</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>302.3300000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sepal.Length</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sepal.Length]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sepal.Length</remote-alias>
              <ordinal>4</ordinal>
              <family>iris#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>876.50000000000023</statistic>
                <statistic aggregation='Avg' datatype='real'>5.8433333333333346</statistic>
                <statistic aggregation='Min' datatype='real'>4.2999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>7.9000000000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.82806612797784407</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.82530129178512213</statistic>
                <statistic aggregation='Var' datatype='real'>0.68569351230421927</statistic>
                <statistic aggregation='VarP' datatype='real'>0.68112222222219121</statistic>
                <statistic aggregation='Count' datatype='integer'>150</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5223.8499999999976</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sepal.Width</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sepal.Width]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sepal.Width</remote-alias>
              <ordinal>5</ordinal>
              <family>iris#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>458.60000000000014</statistic>
                <statistic aggregation='Avg' datatype='real'>3.0573333333333341</statistic>
                <statistic aggregation='Min' datatype='real'>2.0</statistic>
                <statistic aggregation='Max' datatype='real'>4.4000000000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.43586628493668372</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.4344109677354801</statistic>
                <statistic aggregation='Var' datatype='real'>0.18997941834450635</statistic>
                <statistic aggregation='VarP' datatype='real'>0.18871288888887633</statistic>
                <statistic aggregation='Count' datatype='integer'>150</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1430.399999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Species</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Species]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Species</remote-alias>
              <ordinal>6</ordinal>
              <family>iris#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;setosa&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;virginica&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>150</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;versicolor&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.264784' measure-ordering='alphabetic' measure-percentage='0.39188' parameter-percentage='0.343336' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:Species:nk]' type='shape'>
            <map to='plus'>
              <bucket>&quot;setosa&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;virginica&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;versicolor&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[ctd:Species:qk]' type='shape'>
            <map to='plus'>
              <bucket>&quot;setosa&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;virginica&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;versicolor&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[ctd:Species:qk]' type='palette'>
            <map to='#309343'>
              <bucket>&quot;virginica&quot;</bucket>
            </map>
            <map to='#b10318'>
              <bucket>&quot;setosa&quot;</bucket>
            </map>
            <map to='#dba13a'>
              <bucket>&quot;versicolor&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Species:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#309343'>
              <bucket>&quot;virginica&quot;</bucket>
            </map>
            <map to='#b10318'>
              <bucket>&quot;setosa&quot;</bucket>
            </map>
            <map to='#dba13a'>
              <bucket>&quot;versicolor&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='hopach distance function' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;cosangle&quot;'>
          <calculation class='tableau' formula='&quot;cosangle&quot;' />
        </column>
        <column caption='color by' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Petal.Width&quot;'>
          <calculation class='tableau' formula='&quot;Petal.Width&quot;' />
        </column>
        <column caption='mysql table' datatype='string' name='[Parameter 5]' param-domain-type='any' role='measure' type='nominal' value='&quot;hopach_results&quot;'>
          <calculation class='tableau' formula='&quot;hopach_results&quot;' />
        </column>
        <column caption='overwrite table?' datatype='boolean' name='[Parameter 6]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
        </column>
        <column caption='run script?' datatype='boolean' name='[Parameter 8]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='textscan.1kt900h04bxgy615sxtd017dr75v'>
        <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='mysql.0xq6zeu13oiji61emninr1ymskos'>
      <column-instance column='[obs_id]' derivation='None' name='[none:obs_id:ok]' pivot='key' type='ordinal' />
      <column aggregation='Sum' caption='Obs Id' datatype='integer' datatype-customized='true' name='[obs_id]' role='dimension' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='textscan.1liry6e1vjbszh12mzcn81bghamr'>
      <column aggregation='Sum' caption='observation id' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
      <column-instance column='[F1]' derivation='None' name='[none:F1:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='textscan.1liry6e1vjbszh12mzcn81bghamr' target='mysql.0xq6zeu13oiji61emninr1ymskos'>
      <column-mapping>
        <map key='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]' value='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:obs_id:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='shortcomings' type='sheet' worksheet='scatterplot 1' />
      <command command='tsc:brush'>
        <param name='exclude' value='scatterplot 1' />
        <param name='field-captions' value='observation id' />
        <param name='target' value='shortcomings' />
      </command>
    </action>
    <action caption='Filter1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='hopach drill down' type='sheet' worksheet='blended cluster id vs. species' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:hopach%20drill%20down?%5Btextscan.1liry6e1vjbszh12mzcn81bghamr%5D.%5BF1%5D~s0=&lt;[obs_id]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='blended cluster id vs. species' />
        <param name='target' value='hopach drill down' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='shortcomings' type='sheet' worksheet='iris species vs. cluster id' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='shortcomings' />
      </command>
    </action>
    <action caption='Highlight3' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='hopach drill down' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Obs Id,observation id' />
        <param name='target' value='hopach drill down' />
      </command>
    </action>
    <action caption='Filter2' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='hopach drill down' type='sheet' worksheet='mega scatterplot' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:hopach%20drill%20down?%5Bmysql.0xq6zeu13oiji61emninr1ymskos%5D.%5Bobs_id%5D~s0=&lt;[F1]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='mega scatterplot' />
        <param name='target' value='hopach drill down' />
      </command>
    </action>
    <datasources>
      <datasource caption='hopach_results (tableau)' name='mysql.0xq6zeu13oiji61emninr1ymskos' />
      <datasource caption='iris_data' name='textscan.1liry6e1vjbszh12mzcn81bghamr' />
    </datasources>
    <datasource-dependencies datasource='mysql.0xq6zeu13oiji61emninr1ymskos'>
      <column aggregation='Sum' caption='Obs Id' datatype='integer' datatype-customized='true' name='[obs_id]' role='dimension' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='textscan.1liry6e1vjbszh12mzcn81bghamr'>
      <column aggregation='Sum' caption='observation id' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='iris_data' name='textscan.1liry6e1vjbszh12mzcn81bghamr' />
            <datasource caption='hopach_results (tableau)' name='mysql.0xq6zeu13oiji61emninr1ymskos' />
          </datasources>
          <datasource-dependencies datasource='mysql.0xq6zeu13oiji61emninr1ymskos'>
            <column caption='Cluster Id' datatype='integer' name='[cluster_id]' role='dimension' type='ordinal' />
            <column caption='Dist Fun' datatype='string' name='[dist_fun]' role='dimension' type='nominal' />
            <column-instance column='[cluster_id]' derivation='None' name='[none:cluster_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dist_fun]' derivation='None' name='[none:dist_fun:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Obs Id' datatype='integer' datatype-customized='true' name='[obs_id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.1liry6e1vjbszh12mzcn81bghamr'>
            <column aggregation='Sum' caption='observation id' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Species]' role='dimension' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]'>
            <groupfilter function='member' level='[none:dist_fun:nk]' member='&quot;abscor&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</rows>
        <cols>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:cluster_id:ok]</cols>
        <join-lod-include-overrides>
          <column>[mysql.0xq6zeu13oiji61emninr1ymskos].[obs_id]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='hopach_results (tableau)' name='mysql.0xq6zeu13oiji61emninr1ymskos' />
          </datasources>
          <datasource-dependencies datasource='mysql.0xq6zeu13oiji61emninr1ymskos'>
            <column caption='Cluster Id' datatype='integer' name='[cluster_id]' role='dimension' type='ordinal' />
            <column-instance column='[cluster_id]' derivation='CountD' name='[ctd:cluster_id:qk]' pivot='key' type='quantitative' />
            <column caption='Dist Fun' datatype='string' name='[dist_fun]' role='dimension' type='nominal' />
            <column-instance column='[dist_fun]' derivation='None' name='[none:dist_fun:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.0xq6zeu13oiji61emninr1ymskos].[ctd:cluster_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='blended cluster id vs. species'>
      <table>
        <view>
          <datasources>
            <datasource caption='hopach_results (tableau)' name='mysql.0xq6zeu13oiji61emninr1ymskos' />
            <datasource caption='iris_data' name='textscan.1liry6e1vjbszh12mzcn81bghamr' />
          </datasources>
          <datasource-dependencies datasource='mysql.0xq6zeu13oiji61emninr1ymskos'>
            <column caption='Cluster Id' datatype='integer' name='[cluster_id]' role='dimension' type='ordinal' />
            <column caption='Dist Fun' datatype='string' name='[dist_fun]' role='dimension' type='nominal' />
            <column-instance column='[cluster_id]' derivation='None' name='[none:cluster_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dist_fun]' derivation='None' name='[none:dist_fun:nk]' pivot='key' type='nominal' />
            <column-instance column='[obs_id]' derivation='None' name='[none:obs_id:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Obs Id' datatype='integer' datatype-customized='true' name='[obs_id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.1liry6e1vjbszh12mzcn81bghamr'>
            <column aggregation='Sum' caption='observation id' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Species]' role='dimension' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.0xq6zeu13oiji61emninr1ymskos].[Action (Obs Id)]'>
            <groupfilter function='level-members' level='[obs_id]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]'>
            <groupfilter function='member' level='[none:dist_fun:nk]' member='&quot;cosangle&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]</column>
            <column>[mysql.0xq6zeu13oiji61emninr1ymskos].[Action (Obs Id)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:obs_id:ok]' />
              <text column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk] / [mysql.0xq6zeu13oiji61emninr1ymskos].[none:cluster_id:ok])</rows>
        <cols>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</cols>
        <join-lod-include-overrides>
          <column>[textscan.1liry6e1vjbszh12mzcn81bghamr].[F1]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='cluster member count'>
      <table>
        <view>
          <datasources>
            <datasource caption='hopach_results (tableau)' name='mysql.0xq6zeu13oiji61emninr1ymskos' />
            <datasource caption='iris_data' name='textscan.1liry6e1vjbszh12mzcn81bghamr' />
          </datasources>
          <datasource-dependencies datasource='mysql.0xq6zeu13oiji61emninr1ymskos'>
            <column caption='Cluster Id' datatype='integer' name='[cluster_id]' role='dimension' type='ordinal' />
            <column-instance column='[obs_id]' derivation='CountD' name='[ctd:obs_id:qk]' pivot='key' type='quantitative' />
            <column caption='Dist Fun' datatype='string' name='[dist_fun]' role='dimension' type='nominal' />
            <column-instance column='[cluster_id]' derivation='None' name='[none:cluster_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dist_fun]' derivation='None' name='[none:dist_fun:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Obs Id' datatype='integer' datatype-customized='true' name='[obs_id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.1liry6e1vjbszh12mzcn81bghamr'>
            <column aggregation='Sum' caption='observation id' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Species]' role='dimension' type='nominal' />
            <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:dist_fun:nk]' member='&quot;abscosangle&quot;' />
              <groupfilter function='member' level='[none:dist_fun:nk]' member='&quot;cosangle&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.0xq6zeu13oiji61emninr1ymskos].[ctd:obs_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk] / ([textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk] / [mysql.0xq6zeu13oiji61emninr1ymskos].[none:cluster_id:ok]))</rows>
        <cols />
        <join-lod-include-overrides>
          <column>[textscan.1liry6e1vjbszh12mzcn81bghamr].[F1]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='data blending with restaurants'>
      <table>
        <view>
          <datasources>
            <datasource caption='restaurants' name='textscan.1kt900h04bxgy615sxtd017dr75v' />
            <datasource caption='tableau (restaurant)' name='mysql.11dbwcn1vr1ye315u9q3g19seb77' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='mysql.11dbwcn1vr1ye315u9q3g19seb77'>
            <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lng]' derivation='Avg' name='[avg:lng:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lng' datatype='real' name='[lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.1kt900h04bxgy615sxtd017dr75v'>
            <column-instance column='[restaurant]' derivation='None' name='[none:restaurant:nk]' pivot='key' type='nominal' />
            <column caption='Restaurant' datatype='string' name='[restaurant]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[mysql.11dbwcn1vr1ye315u9q3g19seb77].[avg:lng:qk]' field-type='quantitative' max='1494652.490152284' min='1490363.4057377137' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[mysql.11dbwcn1vr1ye315u9q3g19seb77].[avg:lat:qk]' field-type='quantitative' max='6901134.3899823176' min='6895269.6576942503' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[mysql.11dbwcn1vr1ye315u9q3g19seb77].[avg:lat:qk]' value='' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1kt900h04bxgy615sxtd017dr75v].[none:restaurant:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.11dbwcn1vr1ye315u9q3g19seb77].[avg:lat:qk]</rows>
        <cols>[mysql.11dbwcn1vr1ye315u9q3g19seb77].[avg:lng:qk]</cols>
        <join-lod-include-overrides>
          <column>[mysql.11dbwcn1vr1ye315u9q3g19seb77].[address]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='debug demo'>
      <table>
        <view>
          <datasources>
            <datasource caption='restaurants' name='textscan.1kt900h04bxgy615sxtd017dr75v' />
          </datasources>
          <datasource-dependencies datasource='textscan.1kt900h04bxgy615sxtd017dr75v'>
            <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
            <column caption='debug' datatype='string' name='[locache results (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='SCRIPT_STR(&apos;&#10;paste0(capture.output(str(.arg1)), collapse=&quot;\n&quot;)&#10;&apos;, ATTR([address]))'>
                <table-calc level-break='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' ordering-type='Field'>
                  <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[restaurant]' />
                  <order field='[textscan.1kt900h04bxgy615sxtd017dr75v].[address]' />
                </table-calc>
              </calculation>
            </column>
            <column-instance column='[address]' derivation='None' name='[none:address:nk]' pivot='key' type='nominal' />
            <column-instance column='[restaurant]' derivation='None' name='[none:restaurant:nk]' pivot='key' type='nominal' />
            <column caption='Restaurant' datatype='string' name='[restaurant]' role='dimension' type='nominal' />
            <column-instance column='[locache results (copy)]' derivation='User' name='[usr:locache results (copy):nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='190' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1kt900h04bxgy615sxtd017dr75v].[none:address:nk]' value='180' />
            <format attr='width' field='[textscan.1kt900h04bxgy615sxtd017dr75v].[none:restaurant:nk]' value='128' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:locache results (copy):nk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1kt900h04bxgy615sxtd017dr75v].[none:restaurant:nk] / [textscan.1kt900h04bxgy615sxtd017dr75v].[none:address:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='iris species vs. cluster id'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>&lt;</run>
            <run>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_213358033591664641:ok:1]</run>
            <run>&gt;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='iris_data' name='textscan.1liry6e1vjbszh12mzcn81bghamr' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='hopach distance function' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;cosangle&quot;'>
              <calculation class='tableau' formula='&quot;cosangle&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.1liry6e1vjbszh12mzcn81bghamr'>
            <column caption='hopach clustering' datatype='integer' name='[Calculation_213358033591664641]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='SCRIPT_INT(&quot;&#13;&#10;sepal_length &lt;- .arg1&#13;&#10;sepal_width &lt;- .arg2&#13;&#10;petal_length &lt;- .arg3&#13;&#10;petal_width &lt;- .arg4&#13;&#10;&#13;&#10;# if we had mixed data types, we&apos;d have to write our own distance&#13;&#10;# function, in which case, we&apos;d want to use hopach::distancematrix&#13;&#10;#&#13;&#10;# But, instead, we have all numeric data, so we can call hopach::hopach&#13;&#10;# directly, with various prebuilt distance functions (e.g., &apos;cosangle&apos;,&#13;&#10;# &apos;abscosangle&apos;, &apos;euclid&apos;, &apos;abseuclid&apos;, &apos;cor&apos;, &apos;abscor&apos;)&#13;&#10;dist_function &lt;- .arg5&#13;&#10;&#13;&#10;&#13;&#10;input_matrix &lt;-&#13;&#10;  data.frame(sepal_length, sepal_width, petal_length, petal_width)&#13;&#10;results &lt;- hopach::hopach(input_matrix, d = dist_function)&#13;&#10;results$clustering$labels&#13;&#10;&quot;,&#13;&#10;SUM([Sepal.Length]), SUM([Sepal.Width]), SUM([Petal.Length]), SUM([Petal.Width]),&#13;&#10;[Parameters].[Parameter 2])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' caption='observation id' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Petal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Petal.Width]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal.Width]' role='measure' type='quantitative' />
            <column datatype='string' name='[Species]' role='dimension' type='nominal' />
            <column-instance column='[F1]' derivation='Attribute' name='[attr:F1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_213358033591664641]' derivation='User' name='[usr:Calculation_213358033591664641:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_213358033591664641]' derivation='User' name='[usr:Calculation_213358033591664641:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[attr:F1:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#404b73' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</rows>
        <cols>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_213358033591664641:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='mega scatterplot'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Note: &#10;1. we&apos;ll have to modify the transparency to see what&apos;s going on in the Sepal.Width vs. Sepal.Width plot&#10;2. we can make some pretty crude algorithms with decision stumps</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='iris_data' name='textscan.1liry6e1vjbszh12mzcn81bghamr' />
            <datasource caption='hopach_results (tableau)' name='mysql.0xq6zeu13oiji61emninr1ymskos' />
          </datasources>
          <datasource-dependencies datasource='mysql.0xq6zeu13oiji61emninr1ymskos'>
            <column-instance column='[obs_id]' derivation='None' name='[none:obs_id:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Obs Id' datatype='integer' datatype-customized='true' name='[obs_id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.1liry6e1vjbszh12mzcn81bghamr'>
            <column aggregation='Sum' caption='observation id' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Petal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Petal.Width]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal.Width]' role='measure' type='quantitative' />
            <column datatype='string' name='[Species]' role='dimension' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
            <column-instance column='[Petal.Length]' derivation='Sum' name='[sum:Petal.Length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Petal.Width]' derivation='Sum' name='[sum:Petal.Width:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sepal.Length]' derivation='Sum' name='[sum:Sepal.Length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sepal.Width]' derivation='Sum' name='[sum:Sepal.Width:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[Action (Species)]'>
            <groupfilter function='level-members' level='[Species]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[Action (observation id)]'>
            <groupfilter function='level-members' level='[F1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1liry6e1vjbszh12mzcn81bghamr].[Action (Species)]</column>
            <column>[textscan.1liry6e1vjbszh12mzcn81bghamr].[Action (observation id)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Length:qk]' field-type='quantitative' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Width:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Length:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Length:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Width:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Width:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' />
              <lod column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]' />
              <text column='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:obs_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Length:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' />
              <lod column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]' />
              <text column='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:obs_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Width:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' />
              <lod column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]' />
              <text column='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:obs_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' y-axis-name='[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Length:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' />
              <lod column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]' />
              <text column='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:obs_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' y-axis-name='[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Width:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' />
              <lod column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]' />
              <text column='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:obs_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Length:qk] + ([textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Width:qk] + ([textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Length:qk] + [textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Width:qk])))</rows>
        <cols>([textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Length:qk] + ([textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Width:qk] + ([textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Length:qk] + [textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Width:qk])))</cols>
        <join-lod-include-overrides>
          <column>[mysql.0xq6zeu13oiji61emninr1ymskos].[obs_id]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='normalized p.w vs. p.l'>
      <table>
        <view>
          <datasources>
            <datasource caption='iris_data' name='textscan.1liry6e1vjbszh12mzcn81bghamr' />
          </datasources>
          <datasource-dependencies datasource='textscan.1liry6e1vjbszh12mzcn81bghamr'>
            <column caption='normalized petal length' datatype='real' name='[Calculation_189151187457298433]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&apos;&#13;&#10;petal_length &lt;- .arg1&#13;&#10;(petal_length - mean(petal_length))/sd(petal_length)&#13;&#10;&apos;, SUM([Petal.Length]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Petal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Petal.Width]' role='measure' type='quantitative' />
            <column datatype='string' name='[Species]' role='dimension' type='nominal' />
            <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
            <column caption='normalized petal width' datatype='real' name='[normalized petal length (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&apos;&#13;&#10;petal_length &lt;- .arg1&#13;&#10;(petal_length - mean(petal_length))/sd(petal_length)&#13;&#10;&apos;, SUM([Petal.Width]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_189151187457298433]' derivation='User' name='[usr:Calculation_189151187457298433:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='RowInPane' />
            </column-instance>
            <column-instance column='[normalized petal length (copy)]' derivation='User' name='[usr:normalized petal length (copy):qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='RowInPane' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:normalized petal length (copy):qk:2]</rows>
        <cols>([textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk] * [textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_189151187457298433:qk:2])</cols>
      </table>
    </worksheet>
    <worksheet name='scatterplot 1'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Now, when we compute along Species, the data that&apos;s sent to Rserve is split up (according to Species) and thus the clustering happens intra-species, not intra-subject. Bringing this down to a standard X vs. Y scatterplot (not a 2x2) doesn&apos;t make things better... In fact, labeling the data makes table calculations that cannot properly cluster the data.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='iris_data' name='textscan.1liry6e1vjbszh12mzcn81bghamr' />
          </datasources>
          <datasource-dependencies datasource='textscan.1liry6e1vjbszh12mzcn81bghamr'>
            <column aggregation='Sum' caption='observation id' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Petal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Petal.Width]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal.Width]' role='measure' type='quantitative' />
            <column datatype='string' name='[Species]' role='dimension' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
            <column-instance column='[Petal.Length]' derivation='Sum' name='[sum:Petal.Length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Petal.Width]' derivation='Sum' name='[sum:Petal.Width:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sepal.Length]' derivation='Sum' name='[sum:Sepal.Length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sepal.Width]' derivation='Sum' name='[sum:Sepal.Width:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[Action (Species)]'>
            <groupfilter function='level-members' level='[Species]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1liry6e1vjbszh12mzcn81bghamr].[Action (Species)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]' />
              <color column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Width:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]' />
              <color column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Length:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]' />
              <color column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Width:qk] + [textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Length:qk])</rows>
        <cols>([textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Width:qk] + [textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Length:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='scatterplot 2'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Now, when we compute along Species, the data that&apos;s sent to Rserve is split up (according to Species) and thus the clustering happens intra-species, not intra-subject. Bringing this down to a standard X vs. Y scatterplot (not a 2x2) doesn&apos;t make things better... In fact, labeling the data makes table calculations that cannot properly cluster the data.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='iris_data' name='textscan.1liry6e1vjbszh12mzcn81bghamr' />
          </datasources>
          <datasource-dependencies datasource='textscan.1liry6e1vjbszh12mzcn81bghamr'>
            <column aggregation='Sum' caption='observation id' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Petal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Petal.Width]' role='measure' type='quantitative' />
            <column datatype='string' name='[Species]' role='dimension' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
            <column-instance column='[Petal.Length]' derivation='Sum' name='[sum:Petal.Length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Petal.Width]' derivation='Sum' name='[sum:Petal.Width:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[Action (Species)]'>
            <groupfilter function='level-members' level='[Species]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1liry6e1vjbszh12mzcn81bghamr].[Action (Species)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]' />
              <color column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Length:qk]</rows>
        <cols>[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Width:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='scatterplot 3'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Now, when we compute along Species, the data that&apos;s sent to Rserve is split up (according to Species) and thus the clustering happens intra-species, not intra-subject. Bringing this down to a standard X vs. Y scatterplot (not a 2x2) doesn&apos;t make things better... In fact, labeling the data makes table calculations that cannot properly cluster the data.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='iris_data' name='textscan.1liry6e1vjbszh12mzcn81bghamr' />
          </datasources>
          <datasource-dependencies datasource='textscan.1liry6e1vjbszh12mzcn81bghamr'>
            <column aggregation='Sum' caption='observation id' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sepal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal.Width]' role='measure' type='quantitative' />
            <column datatype='string' name='[Species]' role='dimension' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sepal.Length]' derivation='Sum' name='[sum:Sepal.Length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sepal.Width]' derivation='Sum' name='[sum:Sepal.Width:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[Action (Species)]'>
            <groupfilter function='level-members' level='[Species]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1liry6e1vjbszh12mzcn81bghamr].[Action (Species)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]' />
              <color column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Length:qk]</rows>
        <cols>[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Sepal.Width:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='table calc exercise'>
      <table>
        <view>
          <datasources>
            <datasource caption='iris_data' name='textscan.1liry6e1vjbszh12mzcn81bghamr' />
          </datasources>
          <datasource-dependencies datasource='textscan.1liry6e1vjbszh12mzcn81bghamr'>
            <column caption='normalized petal length' datatype='real' name='[Calculation_189151187457298433]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&apos;&#13;&#10;petal_length &lt;- .arg1&#13;&#10;(petal_length - mean(petal_length))/sd(petal_length)&#13;&#10;&apos;, SUM([Petal.Length]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Petal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Petal.Width]' role='measure' type='quantitative' />
            <column datatype='string' name='[Species]' role='dimension' type='nominal' />
            <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
            <column caption='normalized petal width' datatype='real' name='[normalized petal length (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&apos;&#13;&#10;petal_length &lt;- .arg1&#13;&#10;(petal_length - mean(petal_length))/sd(petal_length)&#13;&#10;&apos;, SUM([Petal.Width]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Petal.Length]' derivation='Sum' name='[sum:Petal.Length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Petal.Width]' derivation='Sum' name='[sum:Petal.Width:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_189151187457298433]' derivation='User' name='[usr:Calculation_189151187457298433:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[normalized petal length (copy)]' derivation='User' name='[usr:normalized petal length (copy):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_189151187457298433:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:normalized petal length (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Length:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Width:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Length:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_189151187457298433:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1liry6e1vjbszh12mzcn81bghamr].[sum:Petal.Width:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.1liry6e1vjbszh12mzcn81bghamr].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1liry6e1vjbszh12mzcn81bghamr].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk] / [textscan.1liry6e1vjbszh12mzcn81bghamr].[:Measure Names])</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='hopach drill down'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='hopach_results (tableau)' name='mysql.0xq6zeu13oiji61emninr1ymskos' />
      </datasources>
      <datasource-dependencies datasource='mysql.0xq6zeu13oiji61emninr1ymskos'>
        <column caption='Dist Fun' datatype='string' name='[dist_fun]' role='dimension' type='nominal' />
        <column-instance column='[dist_fun]' derivation='None' name='[none:dist_fun:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='93000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='7000'>
            <zone h='93000' id='3' type='layout-basic' w='99600' x='0' y='7000'>
              <zone h='93000' id='1' name='mega scatterplot' w='49800' x='49800' y='7000' />
              <zone h='93000' id='7' name='blended cluster id vs. species' w='49800' x='0' y='7000' />
            </zone>
          </zone>
          <zone h='7000' id='10' param='horz' type='layout-flow' w='50000' x='50000' y='0'>
            <zone h='7000' id='6' name='mega scatterplot' pane-specification-id='5' param='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' type='color' w='50000' x='50000' y='0' />
          </zone>
          <zone h='7000' id='8' mode='dropdown' name='blended cluster id vs. species' param='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]' type='filter' w='50000' x='0' y='0' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='shortcomings'>
      <style />
      <size maxheight='550' maxwidth='1000' minheight='550' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='38000' id='1' name='iris species vs. cluster id' w='99600' x='0' y='62000' />
              <zone h='53636' id='8' name='scatterplot 1' w='99600' x='0' y='0' />
              <zone h='8364' id='9' name='scatterplot 1' pane-specification-id='2' param='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' type='color' w='49800' x='0' y='53636' />
              <zone h='8364' id='7' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='49800' x='49800' y='53636' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='warmup dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='95875' id='5' param='horz' type='layout-flow' w='100000' x='0' y='4125'>
            <zone h='95875' id='3' type='layout-basic' w='99600' x='0' y='4125'>
              <zone h='95875' id='1' name='scatterplot 1' w='66400' x='0' y='4125' />
              <zone h='47939' id='8' name='scatterplot 2' w='33200' x='66400' y='52061' />
              <zone h='47936' id='10' name='scatterplot 3' w='33200' x='66400' y='4125' />
            </zone>
          </zone>
          <zone h='4125' id='9' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4125' id='6' name='scatterplot 1' pane-specification-id='2' param='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' type='color' w='100000' x='0' y='0' />
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='88'>
    <window class='worksheet' name='scatterplot 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='caption' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Calculation_213358033612091403:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Calculation_213358033612091403:qk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_213358033591664641:nk:2]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_213358033591664641:ok:1]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:hopach clustering (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='scatterplot 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='caption' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Calculation_213358033612091403:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Calculation_213358033612091403:qk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_213358033591664641:nk:2]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_213358033591664641:ok:1]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:hopach clustering (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='scatterplot 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='caption' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Calculation_213358033612091403:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Calculation_213358033612091403:qk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_213358033591664641:nk:2]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_213358033591664641:ok:1]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:hopach clustering (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='warmup dashboard'>
      <viewpoints>
        <viewpoint name='scatterplot 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='scatterplot 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='scatterplot 3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='mega scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]' type='color' />
            <card type='caption' />
            <card param='[textscan.1liry6e1vjbszh12mzcn81bghamr].[Action (Species)]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:obs_id:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Calculation_213358033612091403:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Calculation_213358033612091403:qk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_213358033591664641:nk:2]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_213358033591664641:ok:1]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:hopach clustering (copy):nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='table calc exercise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[:Measure Names]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='normalized p.w vs. p.l'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='iris species vs. cluster id'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1ce9ihl0y7crwi17t02i80vvb92x].[usr:Calculation_213358033279348736:nk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[Species (group)]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Calculation_213358033596588035:qk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Calculation_213358033597661188:qk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Calculation_213358033597825029:nk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Calculation_213358033612091403:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Calculation_213358033616814093:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Petal.Width:qk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_213358033591664641:ok:1]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_213358033591664641:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:Calculation_213358033591664641:qk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='shortcomings'>
      <viewpoints>
        <viewpoint name='iris species vs. cluster id'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='scatterplot 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='debug demo'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[none:address:nk]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[none:restaurant:nk]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:Calculation_1152077082853969922:nk:1]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:Calculation_1152077082853969922:nk:2]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:Calculation_1152077082853969922:nk]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:locache results (copy 3):nk]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:locache results (copy):nk:1]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:locache results (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='data blending with restaurants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='type_in' param='[Parameters].[Parameter 5]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 7]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[mysql.11dbwcn1vr1ye315u9q3g19seb77].[none:address:nk]</field>
            <field>[mysql.11dbwcn1vr1ye315u9q3g19seb77].[none:city:nk]</field>
            <field>[mysql.11dbwcn1vr1ye315u9q3g19seb77].[none:country:nk]</field>
            <field>[mysql.11dbwcn1vr1ye315u9q3g19seb77].[none:formattedAddress:nk]</field>
            <field>[mysql.11dbwcn1vr1ye315u9q3g19seb77].[none:lat:qk]</field>
            <field>[mysql.11dbwcn1vr1ye315u9q3g19seb77].[none:lng:qk]</field>
            <field>[mysql.11dbwcn1vr1ye315u9q3g19seb77].[none:row_names:nk]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[attr:address:nk]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[attr:restaurant:nk]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[none:address:nk]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[none:restaurant:nk]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:debug (copy):nk]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:locache results (copy 3):nk]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:locache results (copy 4):nk:1]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:locache results (copy 4):nk:2]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:locache results (copy 4):nk]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:locache results (copy):nk:2]</field>
            <field>[textscan.1kt900h04bxgy615sxtd017dr75v].[usr:locache results (copy):nk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 5]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card mode='list' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='dropdown' param='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]' show-all='false' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 8]</field>
            <field>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:cluster_id:ok]</field>
            <field>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]</field>
            <field>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:obs_id:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:hopach clustering (copy):nk]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[usr:locache results (copy 4):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:cluster_id:ok]</field>
            <field>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='cluster member count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:cluster_id:ok]</field>
            <field>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]</field>
            <field>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:obs_id:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='blended cluster id vs. species'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='radiolist' param='[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:cluster_id:ok]</field>
            <field>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:dist_fun:nk]</field>
            <field>[mysql.0xq6zeu13oiji61emninr1ymskos].[none:obs_id:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:F1:ok]</field>
            <field>[textscan.1liry6e1vjbszh12mzcn81bghamr].[none:Species:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='hopach drill down'>
      <viewpoints>
        <viewpoint name='blended cluster id vs. species'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='mega scatterplot'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='scatterplot 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='scatterplot 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAXfUlEQVR4nO2dWXBc13nnf7dX9IqVALGQBLGQFCmSlqzN9CZZjC3Zkm1lGbkSOXFllJmq
      bE9JTWWmpmoepiblPEzVPEymKrYVpyLbiiOLY5sexpJIWaIlURIXESS4ACQWglgbQKPRe9/l
      zAMFmi0SvRBooon7/d4k/u/p73afP8757jnfPZpSSiEINsVV7gXiF2E9UbYBYrEYHo+nJK1p
      mjidzlXXWpYFgMPhWNM4KqVVSqGUuuvuz+FwoGlaUa1SCsuySmq7HO1SHOVoyzaAx+PB7/eX
      pDUMA5ertI8oR2uaJpqmldxBKhVHpbSWZaGUKvmHrIaYDcPA6XSWbADTNEtqu1wDlBtzaT1I
      ENYpYgDB1ogBBFsjBhBsjRhAsDViAMHWiAEEW7OsAZRSGIbx0XNYU1aAhXXJ8gYwsrzy8svM
      xJIcPXKEU6cv3sm4BOGOsOySmcPlpau7B7eZRWmAUqRSKXRdxzCMkho3TbPkQMrRWpaFpmnX
      t0SsVRyV0i5thSh11K2GmMvRlqOv9HehFdsNGo/HCQYDaNq1wSKVSslWiAprZStEvraSWyGK
      KkOhUEmNCcLdiDwFEmyNGECwNWIAwdaIAQRbIwYQbI0YQLA1YgDB1ogBBFsjBhBsjRhAsDVi
      AMHWiAEEWyMGEGyNGECwNWIAwdaIAQRbs6wBLCPD2++8S0q3OHv6JDNzsTsZlyDcEZatCEvM
      jDI+MUNXKkcymWBiYoKgzy01wXdAKzXBv6HS38WyBgg2d9K1JU58bpra+jrqGlvw+/2kUqmS
      ay6BimjLrQmuVByV0pZbE1ypOMrVllMTXGrb5dYEl9rude1y/+BweXngwQdKbkgQ7kYkCRZs
      jRhAsDViAMHWiAEEWyMGEGyNGECwNWIAwdaIAQRbIwYQbI0YQLA1YgDB1ogBBFsjBhBsjRhA
      sDViAMHWiAEEW1PgoGyLgfMXyBoWV0eHWUik72RcgnBHWLYiTE/M8MGJkwQaWpmcjOCYjrP3
      /p1YllVyLe5SOVsltEBVxFEpbbXEUW7MpdbultP2Ug34arerlFreAM6aWjZ1tBKZmcHlVoQb
      GzFNs+ybrJS2HKol5nK11RLHamvL0S9pKhVz0YOyTdPMK0iWg7Irr5WDsvO1lTwou2gPKqca
      XxDuNuQpkGBrxACCrREDCLam9FdoCcI6IpZZ5OLMZRkBBPuRNXL806kfkzNzYgDBfuiWjs9V
      w+6We8QAgv0IegJ8sn0PL/cflBxAsB9DZ/qo93monwyJAQT7YWoW6azCjM6JAQT70d7ZRTy2
      wExHlxhAsB/+YBh/MExjS5skwUL1opTifGSQy/OjKMrbAVwqMgIIVcuxsRNMJyIkskl0pbOr
      efuqf4YYQKhaIsk5dmzoJZpcYC4VrchnyBRIqFqe2PYFzkydZyY1y6c3P1iRzxADCFVJNhHj
      9PunaZmBumkPvz5+uiKfs6wBzFycH774Q9KGxS8PHmB0IlKRAAThVjicLuYTCzQ3NvHh2UGG
      z1+oSBq8bA5g5LI0hHyMXJ2joXkDk1fH2FAXkIOy74BWDsoGze1h147tXB0e5POffpCE4cAs
      od+VG/OyNcFKWczNzaMUeNwOavxhvB6X1ATfAa3UBOdrK1kTvKxS0xw0NTWV1JAg3K1IEizY
      GjGAYGvEAIKtEQMItkYMINgaMYBga8QAgq0RAwi2Rgwg2BoxgGBrxACCrREDCLZGSiKFdUHO
      1PnnU/9KMpvia7ueoMnycH5glIXoON17H+Ty0Cj7P7MPuLbDNH7pINnFcRkBhPVB//RFtm/o
      4Vv3P8vhS0fx+ANEE4s0hoK8+H9e5PjZC9e1Vi6OmUtQv/ffywggrA96Gjv5x5MvcXbyPA9t
      vg+318+ee3dxZWiQP/vrvySXiV3XOtwBlJkjdu6l4ofkfRwpiKm8Vgpi8rWlFsTopk46lyHs
      CxXVTk6MURsOLj8CKMvg6Jtv8cC+zzHYf4pw0ya2bt5YtGFBWAvycoCdX6Ij2MLk1SnGJ0ao
      a24hkVN8ctcOAJSZ5h/+5/9i175HlzeAZWTIZOJcnZxD12F+apqWprDUBN8BrdQE/4ZSv4u+
      qXP0NmxlT/NOXj53kN/Z9DmOnzlDQ9jBgTd+zZ7uDoztPQBY2RRbertJJjIFaoItg/7+c/iC
      dbjIEWpopaE2IFOgO6CVKVC+tpQpUDyb5B9P/gi35uaRzfdzX+suLpzr5/iHJ9javY2U4eK3
      PvPQTTFIDlCFWjFAvracHCCTyxAqIQdYilkegwrrAqUsUpcOkjn3ImZmoeTrxADCuiAz0wco
      glufYOHcv5R8nawDCOsCZ00DudgRTEvhCmwo+ToZAYR1gSvYxqxzD3Hdh9b+RMnXiQGEqsUy
      c8QuvEz80s9RlsmFM8d5481f8fODP2chpedpF+fH+cUbZ5jJBvnFq2+V/BliAKFqSQy/im/j
      /bhCm0iOv0PY56WmsQPTsgj58mfvHpebjg2NTE0nqQsHS/4MyQGEqsUV2Eh6pg8zlyTY9hCJ
      hMbDO7cw4HLi/NjjVn99G8/+4TcxTbPkx8cgBhCqGN/GT+KsaUBpTrx1m9nWeK3T79ix9Zb6
      pTWIUtYilhADCCvGzCwQG/gp3trNBDY/WlYHLIQyMiRGj4DDjTf0+yzMz5HFRa3fjy+Qvxir
      lEVi+HVyyRnqtn8N09SILCRILs7T3NpJXThfn5o8QWqmTwwgrJzYwAFCPV8nPfYmenwcT7hj
      VdpdHPwZ/rZH0NPzJEaPcOR4hOb2bobOn+ePnv/jPG12fgA0jcCW/SwOHqRvxMvJkRg7N/nR
      whvzDGDmEmQiZwlv/z0xgLByXL4m0lMn0BOTBL3h1Ws32EZ66jhGLklo82fp3lLD5ILOzj27
      b9I6a+pJjv0a09Bx+TfgD0PLBifBxo30tjbkaR1OD5aRIjN9UvYCVaP2btsLpJRFOnIeT3Aj
      Ln8DUHgKVOpeIKUU2bnzKM2Fr7GXpZ566ymWwkhGyKXm8DVtvx7DctMxM5cgM39ZHoMKK+fy
      hVN896fH+ft//jFGkR3qSiky0x+SjZwBFAuz08zNzzI2MX1LvaWnUUYGuNaZC+UXZm4RMz0H
      SpFNLjI0Osbo5QES6ezHYtD59n//W/quxGUKJKyczGKG/Z95iB/86MfE0gaNAfey2vTE+5i5
      RQw9h4bF8WPnuTy1wKJZw1/9+fN5Y0fq6ttYZg4jG0fTwNe8Z9l2c4vjpMbfw1XXQ/zyIc5e
      dTKZNJkcPM9Xnv0jgr7m34hNnd339DI8NCMGEFbO9vsfRtPgv/3X/1x0WmPpSZy+RpQri6Wn
      aGnbxFzCjcPlvGniZOkpXIGNKM2F0tMF21VmFocnhNPXRC5+hdaNPVzpG2ZbVyfR+RRb236j
      1Vw+Hv3KM7g8XskBqlF7t+UAS9pS6gGWHldaCsJd+7kxX/j4tcoyiA+/Dg43oc7H0LTlf2+l
      FKmJ98nFJ6nteRLN6Vm23RtjLnh3qVQSvz/AXGQGjz9EKOAreHOCUBwNp78Jh7rWMaORaZTb
      S2wxxdbN7XnK4++8wZkri7QFFTVzF3j0gZ3Lt6pdO9hRczigSK4AoCenSU2fWT4JNrIpfnzg
      56AU7x97m6nIfJk3Kgg3k5p4DzM9j56YIjV5ghO/PsyPXvwuh468e5PW5/YxMDTKucuDdLS3
      Fmw3EzlHfOR1lGURPf1CQa1lZFi8eAB3qH35EUDPZmmqDzN0ZYK2jnayqSSpVEqK4u+Adj0X
      xZvZJJonDFoOI5uksWUj7qkEXr/7pn7Vu/eT/M09e9CzGXxBX8F+Z+RSaK4AWk0jZmyooNYy
      dCwc4K4rngNkczk8bvf1IUVygMpr130OMHL4Wg6w9XFAQwMUt56rl1oTrJRF/PIhcvEJ6nd9
      A6encF1wdn6Q5OTJ4k+BvB5PMYlgc5RlkBo7ire+E29dJ4UXwjScNQ1oaqnDf7Rgdat2lUVy
      7Cg4PAQ7HinYrqY5CPd85ZoRiy2wWTkOvn4c34ZmeQwqrJzYxVdw1+8gMfoGTu/XcPkal9Wm
      Jt7D0pOYeo7U5AnefOssY7NZ5kwnf/OXz+dp40OvoiwdIxND0zQC7Y+sSrwql+TKhctcff+M
      GEBYOcrM4qypx+GqQVmF80NlpHF661CODMrIoBtZRoaHaOrcfm0a9HGtfwOW4vpq8GqgeWv5
      3Jcep7G5RdYBqlF7t+UAlpEmNniImvoualr2FswDruUAR1AKQlu/gJ7LgeZAN0wC/vzH7Moy
      iA38DM3pIdzz5YLrAOXGvKSVvUDCijl18gNOzrdx9NgVim2EAw3N6UFzetE0DY+3Bo/Hc1Pn
      Bxgeucg7kxs5eslieCJakdhlCiSsmEQ0Rf/oEPd0thfXjh659n5+PUfiylFOn5/hvQuT1DQ0
      86fffDZPe/HDU4zOZclGJ/HXbaarffnc4nYRAwgrZtuOXtq230tDsKaoVhkZnN5alCOLMjJ0
      P/x52jaPc+it0zflAI/uf5JzwzN4rATt3dsrErvkAFWovdtygCVtaesAJouDB1FKo3bbU9f+
      n2WRyRn4fTcbqJx3g95OzDICCKuCmYrg8NejuQqPAprmJNC+D9Oyrie1mtOB37fyrmjpKcxM
      HFeopeRrxADCikmMHCGXnMVKz9Cw949xuJefIWQiZ4kPvYplmdT2Ps3Rt0/SP3AFd0snf/aH
      37jtGMxMlGj/j9A8tRj1XQQ6PlXSdfIUSFgx2YVhQr1fxVPfjZGaKahNR84S7v0qwa4nyMz2
      g6nQQk1o6SxlzcU/Ri4+jq95D6Gep8hFL5V8nYwAwooJ9zzJwpl/whNswR3eUkT7FPOn/gGF
      RtP9/4FHu908pjkwDLPoA9RC1DTeQ+ziK6Qi56jf8UzJ14kBbIQydYzkNM5w+6q9uwfgTP8g
      rtBnmZxa5IvbCmudniB19z6HZSkc7sD1KUipietyGEaGd8caaKrfxMzVFLuKxLGEGMAmKFNn
      /vT3cPibyU45yNV9gqMnhgh50tQ19/Dgntt/zHhleJx/e+P77HvsaSwFzgLeSs+cITHyGpZp
      Utv7FP0D44zNJlA1YZ754hduO4bpwQ+4ODhK7af2cnUuwi4Kj0RLiAFsgqkncNbUE+x+mtjZ
      F5iI9DM8cAWvQ6dt0bUiA7S2NfPNb/0J0YRBsYElM9tPuOdpDD1DZvYcVwfnOD8cg9oA6otf
      uO1pUNOWPXR1JBkfHWLn7odLvk7WAapQW4l1AKUUiZHDZOYvEd76OM5AO6f6L1FXA4GmzbQ1
      160o5lLXAcxcgvkPv4NS0HT/f2RqfAJDcxNL6+ze0XPLuCu5DiAGqEJtpRbClJkjG5/GW9tR
      Ug5QTsyZxQk8vnoc7uJ143piEtO0qKktvnWi0gZYtgcppfjJv7yCqSzePPw6H/YNlNSoUJ0o
      U2fu9PdITx1nceD/rmrb8ZHXSV19m/nT38XSU7x26BVee/2XvHLo1ZvKOtNTJ5nv+z7RvhdI
      z/Stahy3w/I1wcl5UukME5OzKMA0dKkJvkPaStQEm5kYmqcWf+eTLPZ/v6TfsNSYs/PDBO/5
      fdJjvyIbnyIZTTEaixJwfvR484bBJjVzlmDXVzD0DOmZftwNy7/pASpfH11wCmRZFovxOMGA
      H4fDhcOhyRToDmgrlgOMHiEzN0i4az/e+pvn27cbs56YYmHgp3iCGwn3fpWLZ05R39LO1el5
      7t+9I2+6ZWYXmT3xv0FB04N/gdNT+DQXyQFugRig/LbTyShvvNtHU1DRuGkH3e0bVzXmajgo
      eykO2Qwn3MSlvmOMXYmy7dEHOH38TFEDxEcOk5kbxBNqJdS5nx/88Af4mzuoq2vg8X35tbmZ
      SD/x0TdxuLw07PkWmqP0I4oKoSeniV14GaWgYfdzOL21q9LujcheIJvQueM+2lubmboySs+2
      3qL6XPQy9Xufv3bqusNFY/MmgjUu9HTiJm1y/F3q9z6Pp7aTXGxk1WJOXnmLup3fILj1CVLj
      761auzciI4BNCNVv5KknN5Y8RXCHNxPtewG3vwHN6eGRhx8BI0k0e/Nfd3/rA0T7XsDhcBDc
      8vlViznQsY+Fcy+hLEX97j9YtXZvRAwg3JJQ15fwGTlcLg+aptHQWA/U03ALbSTpJ9D5u8xG
      F2l0rF6X0rwNREJP4FYZQs7ainTWvDaj0Sjj4+N0dXWVnOgK65OlVWNPaCPh3q8VTG5fP/Qz
      tEAHupGmt3srjlXaaHf40AFGFzQ2NHkZjaZ5/JEHVqXdG8nLAcbGxtB1nXS68LvYhfVPbmHo
      oxwghjJzBbUtbZsIeiyCtQ2U90yxMJu2dhMOhyCTobG+afUavoG8EcDj8dDX10coFKKxcfUr
      8IW7B0/tFqJ938Ptb8p71/6t+PLX/931A6pXc5v1zt0Pcc9uSn5kejvktdrU1MT27duZm5uj
      p6f4QomwflnQuvB17cOJKtqpV7PTf6xhUMU/fyXkGWBpi8Hu3TcfQync3ShlsXDuJYxMDH/L
      XgId+wrqD//yF3iDmzDRee6526/VrXbycgCfz8fg4CC5XOE5n3D3YaajaE4v9Xv/hEzkbFH9
      xrYOWjdvYteuyryPp1rIGwHS6TTBYJBMZvVeRCpUB05fPcpIEz39XfzN9xbVf+np36no3Lta
      yLu7DRs2sH//fsbGxtYqHqFCKFNn3PkggbCFFt5MoIi+kvPuaiJvCjQyMkJ/fz+1tau/50JY
      W4bPn+YXB/4fVyLT9J3tX7M4zGyM+OVDJIZ/iZmNr1kcS+QZwOFwsLCwUPIuS+Huoamljd2f
      2E00EqGjY9OaxZEYOYy/7SFqmveSGH1jzeJYIm8K5HQ6icViLCwsyCiwzqht7uDLX+4oa7tw
      JQhs+iwL517Csiwadj+3ZnEskfenPpFI0N7eTihU+IAxQbhdLl+dZsj5GB+Mt2N669c6nHwD
      NDY2kkwmyWazGNk4h197laRucezor5iaXVirGIVVQCmT2RN/T+Td/0F8+LU1i+PUe+8wO3WZ
      ucgE45G1f9qYNxbG43FM06SxsRFlZXGbJnMLSTS3g6FLlwj7d0pN8B3QVqIO1khMgsNDw0P/
      iej7f4dv02Or0m652j1772N+MUsqrFMXchbtS5WuCc4zwNzcHJ6PjkV1ef20dvfgyMXpaN9M
      uLEVv99LKpUqaw5ZCW25JZGViqNS2nJLIktp21nbTsLKMf/+twl2fKrkWMq5v1L2Au3c82BF
      SyKhzN/kxv/o7e1F13U0TUPTnPT2Fq8cEu4ONDQivs+zeWc3ZkZW+pfI+xNaV1fHhg0bcLvd
      axWPUCHMxAQ/+clPeffYB7x57Phah1M1rO91buE6mjfMjt4ttHZ1o0fn1zqcqkEMYBMcnhC/
      +40/uLYOsKVtrcOpGmTJV7A1YgCboJQiNvAzZo99m8zs+bUOp2oQA9gEMxXBSE7R+PBfERs4
      sNbhVA1iAJvg8IYx0rMsXngZd6B1rcOpGiQJtgmWaTGkPk1tOk7ztkfXOpyqQQxgE6YnRhgY
      niQbn6Fpoobf/vr+tQ6pKhAD2ISA34/f7aG2uY2mllu9382eiAFsQl1LJ7/3bOea1wNUG5IE
      C7ZGDCDYGjGAYGvEAIKtEQMItqbAOcEWly5dxlSKyfExEunsnYxLWGOM1CyLAwfQF6+udSgV
      ZdnnYcrSmRw6h7u2hekrEzjHo9z3wL1l1WdWSnvjNWsZx3q+v4UL/0qw5xligwdo+MTzaCWe
      /FLOPZaiLbcmuFzt8ndlWTi8AeYmJnA4LUKN9WSzWUzTLLnw2LKsimiXbrDU1/dVKo5K3l85
      P2Ql4lAKjFwCpaxrLx9Qha8p9QUFt6MvV1vOd1H0nOCPL5zIOcGV11binOBytel4hNT4O/jb
      HsYXLu1M4XV5TrCsGtoPY3GM73znJRLOAB2t7/LNZ59hvb4qV54CCTfhDDSxGJmhPlTLfDK9
      bjs/yF4g4RZoTh//5W//7vq5X+sZGQGEW7I0l1/v5wSIAQRbIwYQbI0YQLA1YgDB1ogBBFsj
      BhBsjRhAsDViAMHWiAEEWyMGEGzN/we4414jbYacSgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='scatterplot 3' width='192'>
      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
      VAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='warmup dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='mega scatterplot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='table calc exercise' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='normalized p.w vs. p.l' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='iris species vs. cluster id' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='shortcomings' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='184' name='debug demo' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='data blending with restaurants' width='192'>
      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
      8WPnqPE0VqfScu0JnbykvSYLp7zQjXWIEo5a/O6a4FJiCndou2XT0jY2G+YNORhO0/AsnVVJ
      mh4mb0IWxvpPxe/Ftvkeyvsc+L1d+7I3sxSd1VsNfsuqIo1VuAFysE6gcWGy3g2egr/NgjEG
      pcQsU0pJgoTNvu2eO9LPV3RIHot/7eIKxmuPe7X4s9+aJrr/58TvhWOMFiolylqTLAUt4ffK
      lPgzQ1X6jlPEz5jUxpql6RP52vvMX0oIbJwmkx6TW1cwysXKPAd+pPcU/HuSJzeLtffSwHx6
      XUIJv/c+hankVWryMj5MRrom2COimVpfNj1Ba90tWo68rfmUJmliI3eHI81Xkp1t/ajzeCFI
      LX4Pz634a/OVkvVeIbJdF4zlNE+kkUMNT0aGo2S5vTw63634l42xanoP/sYYEnsji5EZLYtX
      Skn6cZBX5wd56C8ypXkYKy/5Q1olJRHh03ot71XCn69fJ34mC+bVfL76nbP88m98QX7nK99d
      4c9yIn5sxxJPVh+I3SuD2Dy9sjBbctSEQYg/sriqFIuVXvoYTVZpXqfrh0FeXR7kfFV8naZp
      kmlaD5l6Mutez55pOUvxJGJFjMM4yP3lYTkr2MNaumd5DTa1O+f5t//ja/Lvfvt9+Ve/8d5K
      Tu8dSfOrwZ/Lat6s/UuetLZOat6FSu1v4W+9UMAjqAVjropVgn6u40J93Y+D9NdQR9PN9Dq1
      YzNWfI3MKIvVKbzOwuprGAcZ03Q9hkckhkm6tpWw2Wzdxo8KaL07aNnRuPzSpz4qn/3Kn8k/
      +5mPreRk8/GZYrGXRsxjTccutb+VrEVDpbIsnyc3hlUhhPmk+HxQdg2hTMwSpvZlR+fPoU4/
      9DIpC6JpNbGRY9uZDcfkxg7E+Fry1OIfxlH68VFuTa9rWnPrFItPIvjx3jf+9Gvy4q135I3T
      QR7ODyLNUfpX35EXb74tbTOX+e53vi3ffXWRj3/sXfM9Aa14bQdgeW8xQFiGYceyNV7cus9+
      t6URFYsgEqrprZpGLnMZ+uWQupyva9r5Y1kIIhIkxrBs7VfDQ//WH18wBs3PGcYS/vyxT8uO
      OIdplC6lxVsx+p6n1MqwKIz08mv/6T/IJ/7KZyTdj/KNr/+hvPlTvyDf+T+/Li//0s/IyzTK
      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
    </thumbnail>
    <thumbnail height='155' name='Sheet 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='Sheet 11' width='144'>
      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
      YQQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='cluster member count' width='192'>
      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
      xv68zZcA/P+5ov1NOQ7i4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='blended cluster id vs. species' width='192'>
      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
      0su2nnruR5JPuyvCAWouALGl27x1bIyO5vovfrIQX1PNLYQp20axcY+3pmm/f0MhvqaauxtU
      c7mQYS/+VGpuCiTEn5IEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDia
      BEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRA
      OFrNfDOcfA2ieBpq4rtBhXhaZAokHK1mpkDCyRRTn53h1v0Ee3cNM3H9Jut2I//1e6+jAcoy
      OHfyKDHbz1B7gOnFJKMHj7C1qwmA7Poix8+eI6nV8Z2DO5iYifDiK4dLe9cT65w6e5bFVJF9
      mxuZWy/wF//+u4TdmpwBRG24fnkKj+0hUN9LT0sjrxx5rvQt4UY+x+T4PTTDzb2lBF1+m4nZ
      ldK24fZN9HV08vyzL4KmkTb0qn0HmtoZ2tTFocOvsPvAC6hInGxxY+YvARA1obW9g/62OpK5
      JKtZN31t4VKby+2mt28zdVqO9t4+LK+ftra6qu1X0lm2dNbT2tOLz/34sJ5dibFzsJ3p8ZsM
      DbayEtv4PQopgkVN0DNxFlaTDGzpI5vK0dhcX/E7EYroyiIZ209Xg4+7q3EGtmzB6y4/I5GM
      09TYDMommczQ2NRQtf+H7anoCitJg22DfWhIAITDyRRIOJoEQDiaBEA4mgRAOJoEQDiaBEA4
      mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoE
      QDhazQVg5vpZ/vntd1iKpp92V4QD1FwAugb3UG9mWI2mnnZXhAPUXAAWpifZun2ISDT5tLsi
      HKDmAtC/pYeltMYLB7Y97a4IB5AvxhKOVnNnACH+lCQAwtEkAMLRJADC0SQAwtEkAMLRJADC
      0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEk
      AMLRJADC0SQAwtEkAMLRJADC0f4fo6xqnoamjhcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='hopach drill down' width='192'>
      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
      3TN7ydmJAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
