<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook locale='en_US' source-build='9.3.0 (9300.16.0315.0125)' source-platform='mac' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.3'>
      <aliases enabled='yes' />
      <column caption='number of clusters' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
        <calculation class='tableau' formula='3' />
        <range granularity='1' min='2' />
      </column>
      <column alias='bad code chunk' caption='what should we debug?' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;bad&quot;'>
        <calculation class='tableau' formula='&quot;bad&quot;' />
        <aliases>
          <alias key='&quot;bad&quot;' value='bad code chunk' />
          <alias key='&quot;param&quot;' value='parameter' />
          <alias key='&quot;var&quot;' value='internal variable' />
        </aliases>
        <members>
          <member alias='parameter' value='&quot;param&quot;' />
          <member alias='internal variable' value='&quot;var&quot;' />
          <member alias='bad code chunk' value='&quot;bad&quot;' />
        </members>
      </column>
      <column caption='number of samples' datatype='integer' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range min='1' />
      </column>
      <column alias='Petal.Length' caption='test which variable?' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;petal_length&quot;'>
        <calculation class='tableau' formula='&quot;petal_length&quot;' />
        <aliases>
          <alias key='&quot;petal_length&quot;' value='Petal.Length' />
          <alias key='&quot;petal_width&quot;' value='Petal.Width' />
          <alias key='&quot;sepal_length&quot;' value='Sepal.Length' />
          <alias key='&quot;sepal_width&quot;' value='Sepal.Width' />
        </aliases>
        <members>
          <member alias='Petal.Length' value='&quot;petal_length&quot;' />
          <member alias='Petal.Width' value='&quot;petal_width&quot;' />
          <member alias='Sepal.Length' value='&quot;sepal_length&quot;' />
          <member alias='Sepal.Width' value='&quot;sepal_width&quot;' />
        </members>
      </column>
      <column alias='setosa &amp; versicolor' caption='test which species?' datatype='string' name='[Parameter 5]' param-domain-type='list' role='measure' type='nominal' value='&quot;1&quot;'>
        <calculation class='tableau' formula='&quot;1&quot;' />
        <aliases>
          <alias key='&quot;1&quot;' value='setosa &amp; versicolor' />
          <alias key='&quot;2&quot;' value='setosa &amp; virginica' />
          <alias key='&quot;3&quot;' value='virginica &amp; versicolor' />
        </aliases>
        <members>
          <member alias='setosa &amp; versicolor' value='&quot;1&quot;' />
          <member alias='setosa &amp; virginica' value='&quot;2&quot;' />
          <member alias='virginica &amp; versicolor' value='&quot;3&quot;' />
        </members>
      </column>
      <column caption='gaussian mean' datatype='real' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='-14.0'>
        <calculation class='tableau' formula='-14.0' />
      </column>
      <column caption='gaussian sd' datatype='real' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
        <calculation class='tableau' formula='3.0' />
        <range min='0.001' />
      </column>
    </datasource>
    <datasource caption='iris' inline='true' name='textscan.0qpq3rx1w1e5b11co3q8j0jzagtx' version='9.3'>
      <connection class='textscan' directory='/Users/user/repos/docker-rserve/data' filename='iris.csv' password='' server=''>
        <relation name='iris.csv' table='[iris#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='Sepal.Length' ordinal='1' />
            <column datatype='real' name='Sepal.Width' ordinal='2' />
            <column datatype='real' name='Petal.Length' ordinal='3' />
            <column datatype='real' name='Petal.Width' ordinal='4' />
            <column datatype='string' name='Species' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[iris.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sepal.Length</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sepal.Length]</local-name>
            <parent-name>[iris.csv]</parent-name>
            <remote-alias>Sepal.Length</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sepal.Width</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sepal.Width]</local-name>
            <parent-name>[iris.csv]</parent-name>
            <remote-alias>Sepal.Width</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Petal.Length</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Petal.Length]</local-name>
            <parent-name>[iris.csv]</parent-name>
            <remote-alias>Petal.Length</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Petal.Width</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Petal.Width]</local-name>
            <parent-name>[iris.csv]</parent-name>
            <remote-alias>Petal.Width</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Species</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Species]</local-name>
            <parent-name>[iris.csv]</parent-name>
            <remote-alias>Species</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[iris.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='kmeans cluster id' datatype='integer' name='[Calculation_1792995606220009490]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='SCRIPT_INT(&apos;&#10;set.seed(1234)&#10;kmeans(x=data.frame(.arg1, .arg2, .arg3, .arg4),&#10;       nstart = 10,&#10;       centers=.arg5[1])$cluster&#10;&apos;,&#10;SUM([Petal.Length]), SUM([Petal.Width]), SUM([Sepal.Length]), SUM([Sepal.Width]),&#10;[Parameters].[Parameter 1])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='debug example' datatype='string' name='[Calculation_1792995606224445460]' role='measure' type='nominal'>
        <calculation class='tableau' formula='// print information about passed-in variables&#10;// and `capture.output`. When the output of `str`&#10;// is more complicated, `capture.output` will be&#10;// a character vector, which means you&apos;ll need to&#10;// &quot;collapse&quot; it&apos;s output via the `paste` function.&#10;CASE [Parameters].[Parameter 2]&#10;WHEN &apos;param&apos; THEN&#10;SCRIPT_STR(&apos;paste0(capture.output(str(.arg1)), collapse=&quot;\n&quot;)&apos;,[Parameters].[Parameter 1])&#10;WHEN &apos;var&apos; THEN&#10;SCRIPT_STR(&apos;paste0(capture.output(str(data.frame(X = c(1,2), Y = c(&quot;a&quot;, &quot;b&quot;)))), collapse=&quot;\n&quot;)&apos;, 1)&#10;WHEN &apos;bad&apos; THEN&#10;SCRIPT_STR(&apos;paste0(capture.output(capture.output(str(data.frame(X = c(1,2), Y = c(&quot;a&quot;, &quot;b&quot;))))),collapse=&quot;\n&quot;)&apos;, 1)&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='CountD' caption='debug example code output' datatype='string' name='[Calculation_1792995606231433237]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &apos;param&apos; THEN&#10;&quot;SCRIPT_STR(&apos;paste0(capture.output(str(.arg1)), collapse=&apos;n&apos;)&apos;,[number of clusters])&quot;&#10;WHEN &apos;var&apos; THEN&#10;&quot;SCRIPT_STR(&apos;paste0(capture.output(str(data.frame(X = c(1,2), Y = c(&apos;a&apos;, &apos;b&apos;)))), collapse=&apos;\n&apos;)&apos;, 1)&quot;&#10;WHEN &apos;bad&apos; THEN&#10;&quot;SCRIPT_STR(&apos;capture.output(str(data.frame(X = c(1,2), Y = c(&apos;a&apos;, &apos;b&apos;))))&apos;, 1)&quot;&#10;END' />
      </column>
      <column caption='gaussian samples' datatype='real' name='[Calculation_1801791699262992384]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&apos;&#10;rnorm(n=150, mean=.arg1, sd=.arg2)&#10;&apos;, [Parameters].[Parameter 6], [Parameters].[Parameter 7])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='t-test p-value' datatype='real' name='[Calculation_1801791699951095810]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='SCRIPT_REAL(&apos;&#10;t.test(.arg1 ~ .arg2)$p.value&#10;&apos;,&#10;SUM([Calculation_1801791699955560451]),&#10;MAX([Species]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='testing variable' datatype='real' name='[Calculation_1801791699955560451]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 4]&#10;WHEN &apos;sepal_length&apos; THEN [Sepal.Length]&#10;WHEN &apos;sepal_width&apos; THEN [Sepal.Width]&#10;WHEN &apos;petal_length&apos; THEN [Petal.Length]&#10;WHEN &apos;petal_width&apos; THEN [Petal.Width]&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Species]' role='dimension' type='nominal' />
      <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.241736' measure-ordering='alphabetic' measure-percentage='0.497934' parameter-percentage='0.260331' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Species:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;setosa&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;versicolor&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;virginica&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='number of clusters' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
          <range granularity='1' min='2' />
        </column>
        <column alias='bad code chunk' caption='what should we debug?' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;bad&quot;'>
          <calculation class='tableau' formula='&quot;bad&quot;' />
          <aliases>
            <alias key='&quot;bad&quot;' value='bad code chunk' />
            <alias key='&quot;param&quot;' value='parameter' />
            <alias key='&quot;var&quot;' value='internal variable' />
          </aliases>
        </column>
        <column alias='Petal.Length' caption='test which variable?' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;petal_length&quot;'>
          <calculation class='tableau' formula='&quot;petal_length&quot;' />
          <aliases>
            <alias key='&quot;petal_length&quot;' value='Petal.Length' />
            <alias key='&quot;petal_width&quot;' value='Petal.Width' />
            <alias key='&quot;sepal_length&quot;' value='Sepal.Length' />
            <alias key='&quot;sepal_width&quot;' value='Sepal.Width' />
          </aliases>
        </column>
        <column caption='gaussian mean' datatype='real' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='-14.0'>
          <calculation class='tableau' formula='-14.0' />
        </column>
        <column caption='gaussian sd' datatype='real' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
          <range min='0.001' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='debug code'>
      <layout-options>
        <title>
          <formatted-text>
            <run>debug  code:</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='iris' name='textscan.0qpq3rx1w1e5b11co3q8j0jzagtx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='bad code chunk' caption='what should we debug?' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;bad&quot;'>
              <calculation class='tableau' formula='&quot;bad&quot;' />
              <aliases>
                <alias key='&quot;bad&quot;' value='bad code chunk' />
                <alias key='&quot;param&quot;' value='parameter' />
                <alias key='&quot;var&quot;' value='internal variable' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.0qpq3rx1w1e5b11co3q8j0jzagtx'>
            <column aggregation='CountD' caption='debug example code output' datatype='string' name='[Calculation_1792995606231433237]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &apos;param&apos; THEN&#10;&quot;SCRIPT_STR(&apos;paste0(capture.output(str(.arg1)), collapse=&apos;n&apos;)&apos;,[number of clusters])&quot;&#10;WHEN &apos;var&apos; THEN&#10;&quot;SCRIPT_STR(&apos;paste0(capture.output(str(data.frame(X = c(1,2), Y = c(&apos;a&apos;, &apos;b&apos;)))), collapse=&apos;\n&apos;)&apos;, 1)&quot;&#10;WHEN &apos;bad&apos; THEN&#10;&quot;SCRIPT_STR(&apos;capture.output(str(data.frame(X = c(1,2), Y = c(&apos;a&apos;, &apos;b&apos;))))&apos;, 1)&quot;&#10;END' />
            </column>
            <column-instance column='[Calculation_1792995606231433237]' derivation='None' name='[none:Calculation_1792995606231433237:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='697' />
            <format attr='height' value='44' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Calculation_1792995606231433237:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='debug output'>
      <layout-options>
        <title>
          <formatted-text>
            <run>debug  output:</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='iris' name='textscan.0qpq3rx1w1e5b11co3q8j0jzagtx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='number of clusters' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
              <range granularity='1' min='2' />
            </column>
            <column alias='bad code chunk' caption='what should we debug?' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;bad&quot;'>
              <calculation class='tableau' formula='&quot;bad&quot;' />
              <aliases>
                <alias key='&quot;bad&quot;' value='bad code chunk' />
                <alias key='&quot;param&quot;' value='parameter' />
                <alias key='&quot;var&quot;' value='internal variable' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.0qpq3rx1w1e5b11co3q8j0jzagtx'>
            <column caption='debug example' datatype='string' name='[Calculation_1792995606224445460]' role='measure' type='nominal'>
              <calculation class='tableau' formula='// print information about passed-in variables&#10;// and `capture.output`. When the output of `str`&#10;// is more complicated, `capture.output` will be&#10;// a character vector, which means you&apos;ll need to&#10;// &quot;collapse&quot; it&apos;s output via the `paste` function.&#10;CASE [Parameters].[Parameter 2]&#10;WHEN &apos;param&apos; THEN&#10;SCRIPT_STR(&apos;paste0(capture.output(str(.arg1)), collapse=&quot;\n&quot;)&apos;,[Parameters].[Parameter 1])&#10;WHEN &apos;var&apos; THEN&#10;SCRIPT_STR(&apos;paste0(capture.output(str(data.frame(X = c(1,2), Y = c(&quot;a&quot;, &quot;b&quot;)))), collapse=&quot;\n&quot;)&apos;, 1)&#10;WHEN &apos;bad&apos; THEN&#10;SCRIPT_STR(&apos;paste0(capture.output(capture.output(str(data.frame(X = c(1,2), Y = c(&quot;a&quot;, &quot;b&quot;))))),collapse=&quot;\n&quot;)&apos;, 1)&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_1792995606224445460]' derivation='User' name='[usr:Calculation_1792995606224445460:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='346' />
            <format attr='height' value='95' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1792995606224445460:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='descriptives'>
      <table>
        <view>
          <datasources>
            <datasource caption='iris' name='textscan.0qpq3rx1w1e5b11co3q8j0jzagtx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='gaussian mean' datatype='real' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='-14.0'>
              <calculation class='tableau' formula='-14.0' />
            </column>
            <column caption='gaussian sd' datatype='real' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='0.001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.0qpq3rx1w1e5b11co3q8j0jzagtx'>
            <column caption='gaussian samples' datatype='real' name='[Calculation_1801791699262992384]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&apos;&#10;rnorm(n=150, mean=.arg1, sd=.arg2)&#10;&apos;, [Parameters].[Parameter 6], [Parameters].[Parameter 7])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1801791699262992384]' derivation='User' name='[usr:Calculation_1801791699262992384:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1801791699262992384:qk:2]' scope='cols' value='true' />
            <format attr='height' field='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1801791699262992384:qk:2]' value='27' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='32' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='font-size' id='refline3' value='11' />
            <format attr='font-family' id='refline3' value='Arial' />
            <format attr='font-weight' id='refline3' value='bold' />
            <format attr='color' id='refline3' value='#b40f1e' />
            <format attr='font-size' id='refline2' value='11' />
            <format attr='font-weight' id='refline2' value='bold' />
            <format attr='color' id='refline2' value='#b40f1e' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
            <format attr='reverse-palette' id='refline2' value='false' />
            <format attr='line-pattern' id='refline2' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:F1:qk]' />
            </encodings>
            <reference-line axis-column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1801791699262992384:qk:2]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='stdev' id='refline2' label-type='value' scope='per-table' symmetric='true' type='sample' value-column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1801791699262992384:qk:2]' z-order='1'>
              <reference-line-value factor='-1' />
              <reference-line-value factor='1' />
            </reference-line>
            <reference-line axis-column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1801791699262992384:qk:2]' enable-instant-analytics='true' formula='average' id='refline3' label-type='value' probability='95' scope='per-table' value-column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1801791699262992384:qk:2]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#62b6d5' />
                <format attr='size' value='0.51574587821960449' />
                <format attr='shape' value='circle' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1801791699262992384:qk:2]</cols>
      </table>
    </worksheet>
    <worksheet name='scatterplots'>
      <table>
        <view>
          <datasources>
            <datasource caption='iris' name='textscan.0qpq3rx1w1e5b11co3q8j0jzagtx' />
          </datasources>
          <datasource-dependencies datasource='textscan.0qpq3rx1w1e5b11co3q8j0jzagtx'>
            <column datatype='real' name='[Petal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Petal.Width]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal.Width]' role='measure' type='quantitative' />
            <column datatype='string' name='[Species]' role='dimension' type='nominal' />
            <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
            <column-instance column='[Petal.Length]' derivation='Sum' name='[sum:Petal.Length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Petal.Width]' derivation='Sum' name='[sum:Petal.Width:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sepal.Length]' derivation='Sum' name='[sum:Sepal.Length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sepal.Width]' derivation='Sum' name='[sum:Sepal.Width:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Petal.Length:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Petal.Width:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Sepal.Length:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]' />
            </encodings>
          </pane>
          <pane id='4' x-axis-name='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Sepal.Width:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Petal.Length:qk] + ([textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Petal.Width:qk] + ([textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Sepal.Length:qk] + [textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Sepal.Width:qk])))</rows>
        <cols>([textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Petal.Length:qk] + ([textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Petal.Width:qk] + ([textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Sepal.Length:qk] + [textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Sepal.Width:qk])))</cols>
      </table>
    </worksheet>
    <worksheet name='t-test p-value'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;</run>
            <run fontsize='12'>Sheet Name</run>
            <run fontsize='12'>&gt;</run>
            <run fontsize='12'> for </run>
            <run fontsize='12'>&lt;</run>
            <run fontsize='12'>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]</run>
            <run fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='iris' name='textscan.0qpq3rx1w1e5b11co3q8j0jzagtx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Petal.Length' caption='test which variable?' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;petal_length&quot;'>
              <calculation class='tableau' formula='&quot;petal_length&quot;' />
              <aliases>
                <alias key='&quot;petal_length&quot;' value='Petal.Length' />
                <alias key='&quot;petal_width&quot;' value='Petal.Width' />
                <alias key='&quot;sepal_length&quot;' value='Sepal.Length' />
                <alias key='&quot;sepal_width&quot;' value='Sepal.Width' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.0qpq3rx1w1e5b11co3q8j0jzagtx'>
            <column caption='t-test p-value' datatype='real' name='[Calculation_1801791699951095810]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='SCRIPT_REAL(&apos;&#10;t.test(.arg1 ~ .arg2)$p.value&#10;&apos;,&#10;SUM([Calculation_1801791699955560451]),&#10;MAX([Species]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='testing variable' datatype='real' name='[Calculation_1801791699955560451]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 4]&#10;WHEN &apos;sepal_length&apos; THEN [Sepal.Length]&#10;WHEN &apos;sepal_width&apos; THEN [Sepal.Width]&#10;WHEN &apos;petal_length&apos; THEN [Petal.Length]&#10;WHEN &apos;petal_width&apos; THEN [Petal.Width]&#10;END' />
            </column>
            <column caption='1' datatype='integer' name='[Calculation_1801791699962122248]' role='measure' type='quantitative' user:unnamed='t-test'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Petal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Petal.Width]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal.Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal.Width]' role='measure' type='quantitative' />
            <column datatype='string' name='[Species]' role='dimension' type='nominal' />
            <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1801791699962122248]' derivation='Sum' name='[sum:Calculation_1801791699962122248:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1801791699951095810]' derivation='User' name='[usr:Calculation_1801791699951095810:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Species:nk]' member='&quot;setosa&quot;' />
              <groupfilter function='member' level='[none:Species:nk]' member='&quot;versicolor&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Calculation_1801791699962122248:qk]' field-type='quantitative' major-show='false' minor-show='false' scope='rows' type='space' />
            <format attr='title' class='0' field='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Calculation_1801791699962122248:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Calculation_1801791699962122248:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Calculation_1801791699962122248:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='316' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[Parameters].[Parameter 4]' value='false' />
            <format attr='text-format' field='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1801791699951095810:ok]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]' value='Species: select 2.' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1801791699951095810:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[sum:Calculation_1801791699962122248:qk]</rows>
        <cols>[Parameters].[Parameter 4]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='debug'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_1' value='top' />
        </style-rule>
      </style>
      <size maxheight='500' maxwidth='750' minheight='500' minwidth='750' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='9000' id='9' type='layout-flow' w='50000' x='0' y='41000'>
            <zone h='9000' id='7' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='50000' x='0' y='41000' />
          </zone>
          <zone fixed-size='160' h='9000' id='5' is-fixed='true' param='vert' type='layout-flow' w='50000' x='50000' y='41000'>
            <zone h='9000' id='8' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='50000' x='50000' y='41000' />
          </zone>
          <zone h='19200' id='3' name='debug code' show-title='true' w='100000' x='0' y='50000' />
          <zone h='30800' id='10' name='debug output' show-title='true' w='100000' x='0' y='69200' />
          <zone forceUpdate='true' h='41000' id='1' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontsize='12' italic='true'>Debugging:</run>
              <run fontsize='12'>&#10;&#10;We can use R&apos;s str() and capture.output() functions to inspect variables (internal, or passed-in). However, when the output of str() is complicated (e.g. multiple lines), capture.output() will be a character vector, and unless we concatenate this back down to a string (with paste())... If we don&apos;t tableau will give an error indicating that it got more outputs than expected.&#10;&#10;Example code:&#10;</run>
              <run bold='true' fontalignment='1' fontname='Courier New' fontsize='12'>&#10;paste0(capture.output(str(.arg1)), collapse=&quot;\n&quot;)&#10;</run>
              <run fontsize='12'>&#10;or if you like magrittr:</run>
              <run bold='true' fontname='Courier New' fontsize='12'>&#10;&#10;.arg1 %&gt;%&#10;str %&gt;%&#10;capture.output %&gt;%&#10;paste0(collapse=&quot;\n&quot;)</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='getting started'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_8' value='left' />
          <format attr='vertical-align' id='dash-text_8' value='top' />
          <format attr='wrap' id='dash-text_8' value='auto' />
        </style-rule>
      </style>
      <size maxheight='400' maxwidth='900' minheight='400' minwidth='900' />
      <datasources>
        <datasource caption='iris' name='textscan.0qpq3rx1w1e5b11co3q8j0jzagtx' />
      </datasources>
      <datasource-dependencies datasource='textscan.0qpq3rx1w1e5b11co3q8j0jzagtx'>
        <column datatype='string' name='[Species]' role='dimension' type='nominal' />
        <column-instance column='[Species]' derivation='None' name='[none:Species:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='15250' id='5' param='horz' type='layout-flow' w='100000' x='0' y='84750'>
            <zone h='15250' id='3' type='layout-basic' w='99556' x='0' y='84750'>
              <zone h='15250' id='6' mode='checkdropdown' name='t-test p-value' param='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]' type='filter' w='49778' x='0' y='84750' />
              <zone h='15250' id='7' mode='compact' param='[Parameters].[Parameter 4]' type='paramctrl' w='49778' x='49778' y='84750' />
            </zone>
          </zone>
          <zone forceUpdate='true' h='50000' id='8' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontsize='12' italic='true'>Getting Started:</run>
              <run fontsize='12'>&#10;&#10;We access R from within Tableau using the SCRIPT_BOOL, SCRIPT_STR, SCRIPT_REAL, and SCRIPT_INT functions. These functions take a stringified R-script as a first argument, and then any variable number of Tableau expressions thereafter.&#10;&#10;The code that produces the dashboard below:&#10;</run>
              <run bold='true' fontname='Courier New' fontsize='12'>&#10;SCRIPT_REAL(&apos;t.test(.arg1 ~ .arg2)$p.value&apos;, SUM([testing variable]), MAX([Species]))&#10;&#10;</run>
            </formatted-text>
          </zone>
          <zone h='34750' id='1' name='t-test p-value' show-title='true' w='100000' x='0' y='50000' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='installation and connection'>
      <style />
      <size maxheight='600' maxwidth='1000' minheight='600' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='' h='63500' id='1' param='https://github.com/stevenpollack/docker-rserve/blob/master/README.md#connecting-tableau-and-rserve' type='web' w='100000' x='0' y='36500' />
          <zone forceUpdate='true' h='36500' id='3' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontsize='12' italic='true'>Connecting R and Tableau:</run>
              <run fontsize='12'>&#10;&#10;While you don&apos;t need docker to connect Tableau and Rserve, I highly recommend you use it, if only to follow along with the presentation. My Rserve server has a few non-standard packages installed (like DBI, RMySQL, data.table and magrittr), and these will come in handy once we start trying to hack around the built-in limitations of R and Tableau.&#10;&#10;To install Docker on Windows: </run>
              <run auto-url='true' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://docs.docker.com/engine/installation/windows/&amp;quot;'>https://docs.docker.com/engine/installation/windows/</run>
              <run fontsize='12'>&#10;To install Docker on OS X: </run>
              <run auto-url='true' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://docs.docker.com/engine/installation/mac/&amp;quot;'>https://docs.docker.com/engine/installation/mac/</run>
              <run fontsize='12'>&#10;To install Docker on Linux: </run>
              <run auto-url='true' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://docs.docker.com/engine/installation/linux/&amp;quot;'>https://docs.docker.com/engine/installation/linux/</run>
              <run fontsize='12'>&#10;&#10;For connection instructions see below:</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='limitations'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_8' value='left' />
          <format attr='vertical-align' id='dash-text_8' value='top' />
        </style-rule>
      </style>
      <size maxheight='500' maxwidth='1000' minheight='500' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='23600' id='1' name='descriptives' w='99600' x='0' y='66600' />
              <zone h='9800' id='6' mode='type_in' param='[Parameters].[Parameter 6]' type='paramctrl' w='49800' x='0' y='90200' />
              <zone h='9800' id='7' mode='type_in' param='[Parameters].[Parameter 7]' type='paramctrl' w='49800' x='49800' y='90200' />
              <zone forceUpdate='true' h='66600' id='8' type='text' w='99600' x='0' y='0'>
                <formatted-text>
                  <run bold='true' fontsize='12' italic='true'>Limitations:</run>
                  <run bold='true' fontname='Courier New' fontsize='12'>Æ&#10;</run>
                  <run fontsize='12'>&#10;The given visualization below is made by placing &quot;F1&quot; in the detail, and then running the following Rscript:</run>
                  <run bold='true' fontname='Courier New' fontsize='12'>Æ&#10;</run>
                  <run bold='true' fontalignment='1' fontname='Courier New' fontsize='12'>&#10;SCRIPT_REAL(&apos;rnorm(n=150, mean=.arg1, sd=.arg2)&apos;, [gaussian mean], [gaussian sd])&#10;</run>
                  <run fontsize='12'>&#10;However, notice that 150 is a magic number here. It corresponds to the length of F1. If we tried </run>
                  <run bold='true' fontname='Courier New' fontsize='12'>n=151</run>
                  <run fontsize='12'>, instead, we&apos;d get the error&#10;</run>
                  <run fontcolor='#b40f1e' fontsize='12' italic='true'>&#10;Unexpected number of results returned by SCRIPT function. Function expected 150 values; 151 values were returned.</run>
                  <run fontsize='12' italic='true'>Æ&#10;</run>
                  <run fontsize='12'>&#10;This means that a major limitation is that:&#10;</run>
                  <run bold='true' fontsize='14'>&#10;R CANNOT CREATE ITS OWN CONTENT&#10;</run>
                  <run fontsize='12'>&#10;the structure (i.e. length) of the results of a SCRIPT function are (nearly) completely specified by the loaded data sources.</run>
                  <run bold='true' fontsize='12' italic='true'>Æ&#10;</run>
                  <run fontsize='12'>&#10;But not all hope is lost!</run>
                  <run fontsize='12' italic='true'>Æ&#10;&#10;</run>
                </formatted-text>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='workarounds'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_1' value='top' />
        </style-rule>
      </style>
      <size maxheight='500' maxwidth='1000' minheight='500' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='21600' id='1' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontsize='12' italic='true'>Workarounds: </run>
              <run>(aka dirty-hacks)&#10;</run>
              <run fontsize='12'>&#10;Given the problem here is that Tableau won&apos;t let table calculations return any structure they&apos;d like, we&apos;ll have to work around this by storing the returns of our R calculations in a temporary data store:</run>
            </formatted-text>
          </zone>
          <zone forceUpdate='' h='78400' id='3' param='https://github.com/stevenpollack/docker-rserve/blob/master/notes/hacking_around_the_tableau-r_limitation.md#hacking-around-the-tableau-r-limitation' type='web' w='100000' x='0' y='21600' />
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='28'>
    <window class='dashboard' name='installation and connection'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='getting started'>
      <viewpoints>
        <viewpoint name='t-test p-value'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='debug'>
      <viewpoints>
        <viewpoint name='debug code' />
        <viewpoint name='debug output' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='limitations'>
      <viewpoints>
        <viewpoint name='descriptives'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='workarounds'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='scatterplots'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='debug code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Calculation_1792995606231433237:nk]</field>
            <field>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1792995606224445460:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='debug output'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Calculation_1792995606231433237:nk]</field>
            <field>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1792995606224445460:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='descriptives'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='type_in' param='[Parameters].[Parameter 6]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='t-test p-value'>
      <cards>
        <edge name='left'>
          <strip size='163'>
            <card type='filters' />
            <card type='marks' />
            <card param='[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 4]</field>
            <field>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[:Measure Names]</field>
            <field>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Calculation_1801791699265363969:qk]</field>
            <field>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Calculation_1801791699961978886:qk]</field>
            <field>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[none:Species:nk]</field>
            <field>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1801791699951095810:nk]</field>
            <field>[textscan.0qpq3rx1w1e5b11co3q8j0jzagtx].[usr:Calculation_1801791699951095810:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='installation and connection' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='getting started' width='192'>
      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
      HSd3kbHlU7XwIaS2djo7I5xqquLRAj8SEO1r5Bf/s5mp44sIhDI8+9zzTCgabTtw4SQ7mtK8
      8P1H+O0v/5uVX1/D7o9OoqaHqVi4mporleyGOprYdrifH/1oNXv/9FsqVv+UwO4NXIppkIpQ
      MW8V31wxH3SVM3X19Pb109bRR7rtEO8fayfHksJcNo8np1r593X7qKoo44nvVuC2m7l84Rgv
      vflniotKefzJFezYsIGU00+kv49V33qa7s4+gtajVJfkUL97Iz1pG+lQkHu/8gTH/rwZs9tP
      9ezlVLrDbKs9TTw4yOLHf8CKRVXAaHlHRU1wvrGJptrtNPUN8djqh/HZrKBr7NmynuKl32GK
      o4fXP7jAzHKdxo4IpkyCgmlLKMpcYE99kIpJleRkmumI+ymYOI1KqYvaNivTJjp45eWNuPP8
      eEsqqSm38Pa2k5QUWInKpXx93mgtolR0kFf+9yUUZw7Dg1Ge+vbjrH/5dfKLxzF7yeOUFuXe
      pNPu9nFNF8hs9zBv2t3MfWAlS+dM5sTuTfzHf/6KATmPWeNzWfmdZ6iwDrLzSBO+nFycVolz
      F7uxWa348suoqbqLWbNmMn3WclYuncUnRRE0Js5dwvNr1zLDCy2Xmnnn9d/x+3WbKJ0+j+H2
      c5w/VotUMZ/qykncVeQhm9Voavn0ZHkdTVFHKyaoWdKRLt7fdxp/bi5ep43T5y+NPk2ysODe
      e5k8cSorlk2n7sBZnvruj1j7wo9prD1JRlOYMH0+a198jvKc0U8im92JWZepnltDMtDC+Z4g
      OW4XZhKcbgwwafp4HvrKNyjzKHT3wHPPv8ATK+ZTf6IFt8WCK7eMGVMnUVhaQYHPjkaK8x2t
      V/c8mYiiKuB2uTCbzdjsdqQrxUgk2cTSpfM5UnuIo4fqmTmjkqPHT2N3efG4rDRfaGAkk6Hm
      4a+x9plv43O5kS0eltVMZ0ZNDWSyXKw/SGHNQ6x98Z94+qsruXDiIEuefJrn176I3n6E/uRo
      /3+wu4leyyReWPsiD9aM4+jZVnRPEd975kUeWjTZcP/94Qa1QXX0q/33KfOWUlydocDrGL14
      00cfd+aVsHz5A9hNKnZXDhY9ycGdW9m4cTuPLSxEUVLo+rVFyiRZBl0jq2tIFifLHn0MTbbg
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='debug' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='limitations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='workarounds' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAcJUlEQVR4nO3dZ5Ac6WGY4bene8LOzM7ubM45L7DIwAEXyCNpipSYLZvBpC3SlEmeZFpk
      2X9sucyS7JJUqpJdLosiLucDcHcIhxwXiw3YnHPOOc2Gyd3tH7uHAw44niAGmO7vqbqq2+nu
      mW96+u3p6e1ZSLqu6wiCQZke9QAE4VESAQiGdl8AQd8GS6vraFqYuekp/CGVzXUPy56NB96B
      rqnMz84R1n79R1IB7zqLy2uIYzThN+W+ACbbqnj+nWtM9zbw05/+GX0zy7z57P+kqmMUXdfR
      dB39rv98awv8j7/4WzaD4Tu3aZp2zzwfd/uDpmuaRv2107x5sQoetOz2eDVVu/P/70/7KA96
      zAdN/7jl7/5ZVTXEp6jfXcqDbtxYXubUe404nE7mRrvomtE4ZF3lP/30J4Qx8Yff/REDV0/Q
      MbtGfl4OYUcEz//dfye++Ajr3bcYnltjx5NfIUeZ4WRVO6lpeejr48wur5Oz95N8riSKd2pm
      +VefyebVK93sjA1S1z/H8vwM3/3JnzNeeYKq3jnCvjU+/bmv8pf/9T/j2fTyxJe/Q75pnluT
      8KNv/T5h7xLnr7Xx1OFiFtYCyN5F/OYUYt1mpLCPzbBCVkYyEjA5OkJNdQs5xRlkpqaztuGh
      rqmXf/apT+B2Kvix4LBIvHvqJPv2HSYzPYnR4WGi4lOxSgHmV7yMdvWx78kDqCp4luaITkim
      +tYNPvO5LxFhFkeTv4vkn/3sZz+7+wb/yhRnLl0laE3mQJaLiqoGnvzCv6C9/B0Of+0HlKWY
      aOgZZmKoly9/7yfEBqa4VV2LKaGE73/lcdp6x5B1H35zHOuznWQe+Dy7k0IMbETy5z/+Bsff
      Po2iaJjj0pEWh9mwpDLfX8+RL3wbbaEPmzue6zU9/OV/+ROqqqo4dPhx6urqiE/N5InHnyS3
      II/SghxsFjMDtbeILDlAV0sDQ90N+BU7t6/cIi4zhb6ebtobW8jfsZPQYh9X6kdYW1jGGinT
      197Chm5hfGSaufEJ/J5p/DY3ZjQ6mhtYX5lldi3E1OwMdW0dTPX3QijExOwiHU1tuJwhKm53
      EFJsFLlUhoPRpMXYH9FLKPwq7ttt2SLsrK2s8tk/+CIOs8KmKZKnD+9GMSlMDfdy81Y9MY5I
      1tQ4DpVkMj4xxue/8oeoixNUVVQy7gkR1jRy8pIYH1vn8N4y7DYbfs8S589eIiouHf/yAuHV
      eS7dbCAvK5LxZcjPjGd61k92sgst4KO6sorNgAPP7CC7Dx1mfbqfgZFJbpXfxK/KAPiDQRRT
      iNn5OcJBP4FQCIfTzMrqEguzy4R8QVRdJ+zfwJ2SQXyUE03VkSIi2Ld/L9FOFyU5dioHVlG8
      8wyMThKbnsOOvDSmJkcJhEL4vF4wKeRkJ6OF/Sg2GU1xkpoYQ3f7EDaLmWBYHAP9rrrvHUAy
      ycSmZvHkoT24ol2U7j1ATko8+YUFLMxOk7/nKZ46UEx8RgY5aYmEQhJ7D3+CzLgIskt2YtbD
      5BQWUZSXRWxKKqVF+aSkZWJRvQSUKL759X9Ocnwsm8EQRaWl7CwuJC4phcLcNGyuWHaX7SLB
      KbOpmdl96DEe213K4sICWcX7+fQTu5lfWCA9OwerLBFph+beWfISnUREJZGZmcuBw4+hra0Q
      4bARk5JAWnoGUXEpLI10YnLFU5iXSXJ8AjGxCWjqJna7FZMzmSP7d5OaGIdZMRMXG4s7Jg6/
      109WZh7FOUn0j6+wo2wHBw/sYHPdR9DvpbhsF2Mjw5Ts2onDIj+il1D4VUi/678IGxsdIyMr
      E+mftLROT0cbafk7iLQ98OPQL19aCzM5PUdaagqS9E8bgfBo/c4HIAi/CnHqQjA0EYBgaCIA
      wdBEAIKhiQAEQxMBCIb2wAB0XScUComLvIT/790XwOrsMH/7N3/F0WeP8td/9XfMe9Y5fvry
      w92rrnLu0nXG+ls4U976Kw4xzCs/fxl1+6euWxep65j6Ry996p2XWPKpHz/j3fQw7569REjV
      7pvUUVPF6MQ0rz1/jPunghrY4GZFOboO4eAmz/2vv+E//uTH/Pl/+wvevlB5z7w3zr7C8EoI
      gM3Zfl5459zDjfOhaBz/h/9N73AfFU39AIS8qxx96UXUuy5lD2wsU37t9vYVtjq3r1xndTPw
      wd3oKq+9fowNfxiAsZ56zlf3PNRIum+f51pz30dOb7l2jpa+2Xtvq69kdG6e42fKH+qxPkpf
      Qy3Dk8sfvhRC58yrL/DY1/4tX/zMJ0iKkdnUI1hdmKe/t42UzDyqL5wjKMOJN16nsa2XzIxk
      Tr7+Eldu3GQDJ3kZSXjX5njh2edwuBOor7pJY0MDzqRsFgfqee3N00ws+yktyEKSdK6dPsGl
      6+W09UySGiPz0kuvMDyzRmvNNa5VVOOMT6G76iqNnW2MzwdxKz4CtgQG6y9x8vRlApYopnvr
      eO/CBeqbO6mvqmB4NkBJYRaSBI0116iqaaR9cIqcZBevvPQStU0dZOTmcPKlf+BabS9hzwRv
      v3eRlaCJ/KxUJDRGhkZxyj5efeMETb2j7CgpxizrHHv+F0x6JWZ7GmhobWM5YMahLvLq6yeo
      qWvBFaHz5vGTFO55gtgoJ/see4Lg8hxH/uCbPH2wkPKz73DqwmVGF4NYwwtcvV5Ne1c/OWnx
      dE0sYF4b5/W33mN2QyXZqfPiy69QUVVLSlYeFbduU1SQyYVTl8kpziewMsPl2+3Y/PNUdk+j
      LQ/RPbrA2dNvU9fcQU5uFmfeOc7li5dZ0SKItZmYnuznZv0gn3xyP1rAS11LK0kOE6+9doKu
      4VmsgQXePHWZ/U9+AisBXnvuF6zLTrpvX+VK+S28kp35wTZqG+rpGVsmM97G9LrC2lADx967
      wKJXpyA7HXSd7vobvHrsFOPLAVgZ5a2TZ2jsGCPRobFujmGi5Qanz13CL0fSXddETkE2F947
      haLrSPZorp17mxs3K9AcUVSdP8m67sBqMhGhLfPya2/SOThJXoab5194jfLyG1hikmi/cZaz
      V26gO+NJT4wB1csrzz7LjaZ+wouDnHrvHKshK60V5xha1T/8DqCyvKSRnR5PR8NNKqqbWFlY
      ZWRqjmgpQFNnL52TszRfv4w9LhNreIHyul5WvDJ/+oN/Q3/f1t7e7oojr+wQpblJ5O18gm9/
      4Sk6aus5cf4mZfvK6L99jqmNrb3y1NAkX/72H5MSsUpD+wiOxEKOpJsxJ+zime99g4oLl1Cs
      UfzRD/4Da1PtzK/68S+Ocq5+gD0Hd1Fx7jgjM1P83r/8d9j8c3ztj57BP91OaHunplgdfOO7
      P8AS9nDxzFmwJxJrDXClqp2llRDf/dbnuXGrmt07i7h55hxedWtHMDo1x9RwHwHJSlJ0JKqm
      ATKlO/bwxMF92KMT+OEPv8/YcBurK16Kd+xEWhvHo7g5cOAg2YnO+3c7agifEsmBPTsZaOpE
      w8QXv/k99qRYaOgYIby5wvGL1ew9uIvOW2cYWlglPb+MOLPK4MgswxPzgM706CQANpeb0bZ2
      GpubaKptpK62lbG2Jj71pW/xuQPZ3KioZ9YHf/bTH9LdNcBTX/gyu8vK2HvgMe6+cunMe2dJ
      yS/EM1yHx5bAwX1HiHeaUSwRFBXu5tCuAiIikyjOSqahpRHdZOfb3/sRkev9jHnChHweLt2o
      YFdpMbfOnmdTBT3s42p9Jz/6939KXkIMnqBOWdkuFoaG8YfCqKEVWgb8PPPMM8RHhJkenQJ0
      JiaGCWs6Yb8Xd1IapbnJ1DaPULyzjLJdRYxMznPtvRt854c/psAVoqWzj2BkEn/yx1+nvqGd
      zr4JcvJzCXj9d7bpuXUzz3zns5w9X0/Jzt3cunGFrNxSHj908MMByGTlRVNe0UB63i4KU2JZ
      XNn6JtiugwcoP3WMtMJ9WCMiiE9OJS+/iJT4SKJdiVisVsxW65170tQQgVAYe1Q0siwTVv3Y
      HXZSU1IpLdtDhLJ17Yxk0gj6fQQCYcyKTGx0ErJZIRT24/P5kCQZnTABvxdVA5NsAgmioqJI
      S0mjdGcZFsWEzWZBMSsoZhlF+eBpyYqC1WLGrJgxWSzEJKaSnZdPZrKbSGcCNouCPcJJamoG
      e8pKke+6pMfpTuexvWUMt9cxt+bdGq+u4g8EiIzcWlaxWmhrb8aryURFWgEJn3+TsPbBAdL7
      BxjBzRVa27uIjHZjkTV0dMJBP35/ELNZBgkczu11tGsP030trHg14txONF1F9XtZX11hPbB1
      35JsIz9VoXVGIte9zpTuJsYh4/f78PsCKLKC3WlDkRWU969V0nUCAT93f4HPajOTkppG0Y7d
      uB1WwkE/2vYMkh5mcWaU1oFxYuLcmCRAkvD7fQTDIeTtVR0R4SAlLZ29ZTu216GEDPh9Puan
      p2hqqMFkjcQZIaPpIOkSaCp+n5eZuUUCwQ08ax68/q1DwqWJYfrGZnDHxCBLOuga/kAAHZAU
      8Hm3thlZlrE7bChmM5KmU3LgMeIjZWoqGu8coppdUVjNZqwuN2npqewsKcJs0gkEAh8+BJLI
      Liiir7mG+sYW1nQ7T3/yEOFAgB07ywisL7P/iafIz0ykubGBlU2VQwd3oak6GZnJeDZ85GRk
      ALAxO8xywERSUgpJbhshxcW+vARqmjuwutPZU5qLCZ222tuMTIxhisrgib25qLKdgpIihttq
      aeka4qnP/T765jyd3d0k5+2jKDMGe0Iuicoard19JGaXkRxjIzE1m9CGh4zcAvzr66Rn5yJL
      sL6+SkpaDkHvOnv376O/o5n5FS8HD+1HDwfJLS7Eovto6egjNjufkuw0QGfNs0FGahT1ze24
      4jLZv2cHFkVGDa7RNjJLZnICmdnprK1vkpOaxPDoOCZrJNn5JfjnxpBdGcS5t74jsOlZw52U
      hjvawcrcJNMLa7hjnSSlptDd1oxXcvH0kd2oioN92fHcbunEHpfN3tJMBgcG0c024pJTSVY2
      qGzpJTkzg6LCHCQg2mlDsiWwKzeJuMxi9u0upPLaVaY8Kr/32acIh1Wy01PxrPnIy0lH0lU6
      m5op3rULBZX1TS+P79tDQ2MzAdnFwd2lDPQ2EZ+zA5dNIehbYnAxgFMKsOYN4opLJc0l09Lc
      hjNjJ/vykpDtsWQnRtDS3oM7I4/S3HQkWSHGonLlZhWOpHSyE52MT85id9hIzsgkLimLeOsG
      VQ2tpOTsIikqRGVtB/HpmeSmpxCdmMba/CRrQY3E6HiyU6MYnpgnKT6BI4+VcOXCZUIRcXzi
      cBmBsERWchybflA2Zhib81B2+DDZyXGAhmfNR35ePg7TGq2dfcSn5ZKfEUvz4MRHXAx311cO
      P+oqx/cXe9jp996uceaNk3z261/FJpvumffe+fQ7Z6Ten+fuYT/MlZgPHtf79y/x4bu6b/7t
      dXPP8h+67Zetmw9P+6if37/t7ukft85/+XO8d/ove13uWf6ubeGXjfuj1uGHN6+PWm8PGvNH
      P/f7t4cHPd59z//95yJJSO8/9qO+GlTTNCRJ+kdtLILw63bfadDxgS684QCXrlc/9J3pusZg
      fzcP8wUpk8n04I1f9XPq2KvUdAw91BhU7yJ//39+zosvvsDzL77C+LznY5dpr73GxIrvwRN1
      jcpblWwGwnfdpDHY34NnZYZbjb0PNb7NpTFq2j/6FOCHjQ0PsLIRfKjH+HVZHu+htqP/nts8
      c5NMzX78Op2ZGGJu1f+x8z1q93wG0EJ+3nju50gxSTRU17O2MouPCKJsGteuXmPWEyQ1OQGT
      JDE7OkhdQx1h2U53020GJuaJc8q88OzzxCYks+7XsWibTMxvMDXcSVNzJ6trHrpam1j0QqxT
      pvz6DSYXNkhPS8IkSWx6Fim/fp05TxDFv8DJ6w185umniXJaWZwa5uq1SsKKAyW4wpLfBBtz
      zKyHGOlpp617gMysTDTvDNe7VvjuN76CPbjI7Z5pdpfkga7R39lMVV0L0fFJzAx1UXm7Ad0a
      yUTbLZSUQia76mnpHibG7WBiZplIi87wxDzt7W1k5+TSUltJe+8gDpvEay+/THr+DkySjLo+
      y83K25js0YRWpmlq7aB7YJSU1GS6Gqtpau8nLimFCKsZNeDFsxliYqCH1tZmNGs0sdFOJGBi
      qIuKytt4NTNJcTFIepDXX3weXGnImzNUVN3G7IxjZWqIptYWJueWGepuZdkvoa0v0NjSysjk
      AikpSYx0N1Nd34rDHc/S5CB1DU1oskJDTTXDUwvEuizU19fR0dGL1RWPXfbRMzRLQpwbLRyg
      uvwaba3NLOgOIvyLd9ZV+41zdE4HcFt9VFbeZvP9sUowMdjJzapaFIeLm2dPsCrFEKmtUH6z
      Ct0WhX9pitr6OiSbi9baSsZmV0hJjqejo4v4hK3t6rft3ncAk4zD7iAhLobQmoe07GwunzjD
      6defIxARQ2f1RdqH5gEY7mlmbEmjr/Y6A7M+POPtlLeNExUVjX9+kLbhcVYXp2jsGaei+hbu
      pDhuXr1OTFom5Wcu095cQc/0Ksvjg6wHVHRd5eSJ4ziTshhuuMrgkkpsciIxkXbUwAavHj9J
      QWkR10+9TkdfL93jKyyN9NI3OMOF89eJT0m7804y3lXPc0ePcrq8nh0lxQBszI9x7kYDBVnx
      1NyupX1gmIwEJ8fPXgFgsr+RusElYiNUmpraqW4Zwru6QMv2L42WpwdZCpoIr45S0T5BVJQb
      M17ae3p59fgF8gvzOHX8OB31NQwvegnOdHK7rZm3T93Eag4xMDYDgH9zgZ7xIS5eqiQrL5vz
      b5/fOi7VQzQ3dJKensL5k2+xEdJAknFFRRHpgFdfeIe4ODfHTpygrqaKgBxN1dVzKJFxVNbc
      oLuhhnm/wuZUJ5dvVXHqWhP52Qm8/sa7tFZeZdPkYKa/HXtcMv0tN6lr6aGmqYf0GBtnr1TQ
      UVfBlGfrnaa3oZyBFQW30w7hTZq6x8lIieHUWxdxulzExEbT0tBJWkYqF959Y2usaJw59jpm
      h5Pujn6crihcDhOvvHWW/JJizp14i+qqKpb8ZhqvnmNmAya7b1PbM4XVHvEb3sw/2j0BmGQz
      LmcE7hg3jpQsdpYU45DWmF9cw7++isudgCxtnabSTSZ2HDyCpvoIBP1gjcRpteOOchId5QRd
      IhTc+g1ipNtN2c6d2OOS2VVSQnykjczsElJdCi0dbSysB0DXWfbpFBUUkJ+bzmZAJzI6Cqfd
      ghoMYHfFUFRQQFpyJN6Qhq5rhNWt3yU4UrLZV5qPYtoKILvsCD/4/r/GKum4oyMB8G2sk5iS
      S1FpGdnJsYz09TIyNQ/hrZNla0sLZOUXUbZ7P0mxdtA1NE29c7pwfXmJ3u4uVjcCKIoNd5QT
      p92KFtwgbEuksKAAp1UmoJrZvXMvhcV56LKDJx/fRW9HByMjs/d8mIxKz6G0pASXsv07VzXI
      6Ngw/SMTqFpo6/OPJOOKdhNp1VkMaiyveIiLcoPNwY6ynaTl5FNcXITDbkUyWSgpLCIvN5O5
      iUnssZkUFhWhBfzospvDB/YSXl+ks6eXYEhFD2sUFh1g15FPErHWx82GIQ7vyQdgcWWZjJwi
      du8tJeT3MTY0wOjkHCZZJ8oVSUxUJOMTw/QPT6DqYbTtz2qPPfFplsYHGRgawOFyEem0ELTE
      UZhfQLTThk83UXbgMKHQBn7fBhanG1nVKcrPw2R6NJ/z7vsMEBMTyYVzt7CYzQCYbREceOoI
      U6NDTM4sEB0dDYAiK8gmiX3797O2MMvo6CRxiTEE1pcYWoSu6qu8feYSZrOMxWJBgq37lMBs
      UVhZnGZkfI5Ip5MIs4wkyTyxI5NXXnqB8tZxdhenYlG2vqdrdkSRbAnz86O/YGI9ktLMNBou
      nuDsrXoUxYTVfNf3eSUTETYrTnci3/zq5zl16gJhHdypWaxNt/Pzvz9K/8Qskgbra6vg84Ni
      Jq90H/3VF3n++edYU23Md9fw5rvn0CwKVrMZNA1ZAs+qB9UfwO9ZoKVrgghXCrn2JY4++zx6
      VAKxbieKyYRJVpC0EJ0d3Zhtdpwux9bwJBMWsxmrsr1+LR+MPaRLeD3LhEw2VHVro7LLIRra
      x9mT42ZiYpKwScFusyJJEhazGUmSMJstSJqfUyde41xFG09/6mnkxQ6OPvcKacWF2GxWZElC
      DamY1CB+b4BQILD9epjYWZyFKSEPl2Vrcyjbc4iGK8d47fhZLIoJTCqrK6uo2gamiAgqa26y
      GQKvZ4mQyYa2fcnIUF8HPlXCERGN0yrT2NRLQdQmR48+y6YlmqSYSEwSHDqwn6XZWcbGpomL
      tXHs5GlC4QddWPKbd99ZoPf/+pnJdHcbOuFQGGl7o/8wVQ2jI6HIMrquARKaqoJJfuD8d5YL
      h7bn+eCxwqEQJll54B4hFAyhmBUkSUINh5FM8kPtOXRdIxzWUMwKmhpGx4Qif/DYmrq1x1cU
      GU1V0ZGQ70zXCYXCyIqCSZLQNW3rdNr2qcJQOIx5e6dxN03TUDUds/LxfzVC01Q0bevxPxjz
      9ushSQS3H+NBz7j83eMk7f0UBZmxW+tT1wiF1Q+Naes5KHfdR8Azw8svv8XhL32bsuyEe9cF
      Eops2l4XIMvy1l/p03VAf+BYw6EQZovlnnE/aN086LV/FB75aVDh18O3sY5stWMxP9yfZ1GD
      XmYW10lJSnhkhyGPkghAMDTxhRjB0EQAgqGJAARDEwEIhiYCEAxNBCAYmghAMDQRgGBoIgDB
      0EQAgqHd88+iLC/Po/8G/r1fQfh/1T0BzM9NkZKa9YiGIgi/ffcEYLNG4HK5H9VYBOG3TnwG
      EAxNBCAYmghAMDQRgGBoIgDB0EQAgqGJAARDEwEIhiYCEAxNBCAYmghAMDQRgGBoIgDB0EQA
      gqGJAARDEwEIhiYCEAxNBCAYmghAMDQRgGBoIgDB0EQAgqGJAARDEwEIhiYCEAxNBCAYmghA
      MDQRgGBoIgDB0EQAgqGJAARDEwEIhiYCEAxNBCAYmghAMDQRgGBoIgDB0EQAgqGJAARDEwEI
      hiYCEAxNBCAYmghAMDQRgGBoIgDB0EQAgqGJAARDEwEIhiYCEAxNBCAYmghAMDQRgGBoIgDB
      0EQAgqGJAARDEwEIhiYCEAxNBCAYmghAMDQRgGBoIgDB0EQAgqGJAARDEwEIhiYCEAxNBCAY
      mghAMDQRgGBoIgDB0EQAgqGJAARDEwEIhiYCEAxNBCAYmghAMDQRgGBoIgDB0EQAgqGJAARD
      EwEIhiYCEAxNBCAYmghAMDQRgGBoIgDB0EQAgqGJAARDEwEIhiYCEAxNBCAYmghAMDQRgGBo
      IgDB0EQAgqGJAARDEwEIhiYCEAxNBCAYmghAMDQRgGBoIgDB0EQAgqGJAARDEwEIhiYCEAxN
      BCAYmghAMDQRgGBoIgDB0EQAgqGJAARDEwEIhiYCEAxNBCAYmghAMDQRgGBoIgDB0EQAgqGJ
      AARDEwEIhiYCEAxNBCAYmghAMDQRgGBoIgDB0EQAgqGJAARDEwEIhiYCEAxNBCAYmghAMDQR
      gGBoIgDB0EQAgqGJAARDEwEIhiYCEAxNBCAYmghAMDQRgGBoIgDB0EQAgqGJAARDU+7+we/3
      MTrc+6jGIgi/dZKu6/qjHoQgPCriEEgwtP8Lz9potWvoHukAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='scatterplots' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
